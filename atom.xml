<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ZPF博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://zhangpf2000.github.io/"/>
  <updated>2021-04-24T08:32:53.609Z</updated>
  <id>https://zhangpf2000.github.io/</id>
  
  <author>
    <name>ZhangPF2000</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>05_cpp_去除容器中最大值和最小值后其余值之和</title>
    <link href="https://zhangpf2000.github.io/2021/04/24/codewars/05_cpp_%E5%8E%BB%E9%99%A4%E5%AE%B9%E5%99%A8%E4%B8%AD%E6%9C%80%E5%A4%A7%E5%80%BC%E5%92%8C%E6%9C%80%E5%B0%8F%E5%80%BC%E5%90%8E%E5%85%B6%E4%BD%99%E5%80%BC%E4%B9%8B%E5%92%8C.html/"/>
    <id>https://zhangpf2000.github.io/2021/04/24/codewars/05_cpp_%E5%8E%BB%E9%99%A4%E5%AE%B9%E5%99%A8%E4%B8%AD%E6%9C%80%E5%A4%A7%E5%80%BC%E5%92%8C%E6%9C%80%E5%B0%8F%E5%80%BC%E5%90%8E%E5%85%B6%E4%BD%99%E5%80%BC%E4%B9%8B%E5%92%8C.html/</id>
    <published>2021-04-24T08:29:36.000Z</published>
    <updated>2021-04-24T08:32:53.609Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://www.codewars.com/kata/576b93db1129fcf2200001e6/train/cpp">题目链接</a><br>内容介绍</p></blockquote><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Sum all the numbers of the array (in F# and Haskell you get a list) except the highest and the lowest element (the value, not the index!).</span><br><span class="line">(The highest/lowest element is respectively only one element at each edge, even if there are more than one with the same value!)</span><br><span class="line"></span><br><span class="line">Example:</span><br><span class="line"></span><br><span class="line">&#123; 6, 2, 1, 8, 10 &#125; =&gt; 16</span><br><span class="line">&#123; 1, 1, 11, 2, 3 &#125; =&gt; 6</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">If array is empty, null or None, or if only 1 Element exists, return 0.</span><br><span class="line">Note:In C++ instead null an empty vector is used. In C there is no null. ;-)</span><br><span class="line"></span><br><span class="line">-- There&#x27;s no null in Haskell, therefore Maybe [Int] is used. Nothing represents null.</span><br><span class="line"></span><br><span class="line">Have fun coding it and please don&#x27;t forget to vote and rank this kata! :-)</span><br><span class="line"></span><br><span class="line">I have created other katas. Have a look if you like coding and challenges.</span><br><span class="line"></span><br></pre></td></tr></table></figure><span id="more"></span><blockquote><p>我的解题代码</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; numbers)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (numbers.size() &lt; <span class="number">2</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> min = *<span class="built_in">std</span>::min_element(numbers.cbegin(), numbers.cend());</span><br><span class="line">    <span class="keyword">int</span> max = *<span class="built_in">std</span>::max_element(numbers.cbegin(), numbers.cend());</span><br><span class="line">    <span class="keyword">int</span> add=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> &amp;i : numbers)</span><br><span class="line">        add+=i;</span><br><span class="line">    <span class="keyword">return</span> add-min-max;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 这里我使用了前面学的算法</span></span><br><span class="line"><span class="comment"> * 轻松获得容器中的最大值和最小值</span></span><br><span class="line"><span class="comment"> * 对容器内所有元素求和再减去最大值和最小值</span></span><br><span class="line"><span class="comment"> * 注意:</span></span><br><span class="line"><span class="comment"> * 当容器为空,或者只有一个元素的时候,返回0</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h1 id="希望能对你有所帮助-p-o"><a href="#希望能对你有所帮助-p-o" class="headerlink" title="希望能对你有所帮助(p_o)"></a>希望能对你有所帮助(p_o)</h1>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://www.codewars.com/kata/576b93db1129fcf2200001e6/train/cpp&quot;&gt;题目链接&lt;/a&gt;&lt;br&gt;内容介绍&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight text&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Sum all the numbers of the array (in F# and Haskell you get a list) except the highest and the lowest element (the value, not the index!).&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(The highest/lowest element is respectively only one element at each edge, even if there are more than one with the same value!)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Example:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; 6, 2, 1, 8, 10 &amp;#125; =&amp;gt; 16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; 1, 1, 11, 2, 3 &amp;#125; =&amp;gt; 6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;If array is empty, null or None, or if only 1 Element exists, return 0.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Note:In C++ instead null an empty vector is used. In C there is no null. ;-)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-- There&amp;#x27;s no null in Haskell, therefore Maybe [Int] is used. Nothing represents null.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Have fun coding it and please don&amp;#x27;t forget to vote and rank this kata! :-)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;I have created other katas. Have a look if you like coding and challenges.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="codewars" scheme="https://zhangpf2000.github.io/categories/codewars/"/>
    
      <category term="cpp" scheme="https://zhangpf2000.github.io/categories/codewars/cpp/"/>
    
    
      <category term="codewars" scheme="https://zhangpf2000.github.io/tags/codewars/"/>
    
      <category term="cpp" scheme="https://zhangpf2000.github.io/tags/cpp/"/>
    
  </entry>
  
  <entry>
    <title>04_cpp_返回容器中的最小值</title>
    <link href="https://zhangpf2000.github.io/2021/04/24/codewars/04_cpp_%E8%BF%94%E5%9B%9E%E5%AE%B9%E5%99%A8%E4%B8%AD%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC.html/"/>
    <id>https://zhangpf2000.github.io/2021/04/24/codewars/04_cpp_%E8%BF%94%E5%9B%9E%E5%AE%B9%E5%99%A8%E4%B8%AD%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC.html/</id>
    <published>2021-04-24T08:12:41.000Z</published>
    <updated>2021-04-24T08:16:34.804Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://www.codewars.com/kata/55a2d7ebe362935a210000b2/train/cpp">题目链接</a><br>内容介绍</p></blockquote><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Given an array of integers your solution should find the smallest integer.</span><br><span class="line"></span><br><span class="line">For example:</span><br><span class="line"></span><br><span class="line">    Given [34, 15, 88, 2] your solution will return 2</span><br><span class="line">    Given [34, -345, -1, 100] your solution will return -345</span><br><span class="line"></span><br><span class="line">You can assume, for the purpose of this kata, that the supplied array will not be empty.</span><br></pre></td></tr></table></figure><span id="more"></span><blockquote><p>我的代码<br>这个题目还是很简单的</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">findSmallest</span><span class="params">(<span class="built_in">vector</span> &lt;<span class="keyword">int</span>&gt; <span class="built_in">list</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// Your Code is Here ... Hope you Enjoy</span></span><br><span class="line">    <span class="keyword">int</span> num = <span class="built_in">list</span>[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> &amp;i : <span class="built_in">list</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(num &gt;= i)</span><br><span class="line">            num = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> num;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="大佬的代码"><a href="#大佬的代码" class="headerlink" title="大佬的代码"></a>大佬的代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">findSmallest</span><span class="params">(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; xs)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> *<span class="built_in">std</span>::min_element(xs.cbegin(), xs.cend());</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 使用算法解决问题</span></span><br></pre></td></tr></table></figure><blockquote><p>这个题目的启发<br>多使用 cpp 的语法,而不要纠结于 c 语言的<br>cpp 的好多语法都很安全</p></blockquote><h1 id="希望能对你有所帮助-p-o"><a href="#希望能对你有所帮助-p-o" class="headerlink" title="希望能对你有所帮助(p_o)"></a>希望能对你有所帮助(p_o)</h1>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://www.codewars.com/kata/55a2d7ebe362935a210000b2/train/cpp&quot;&gt;题目链接&lt;/a&gt;&lt;br&gt;内容介绍&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight text&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Given an array of integers your solution should find the smallest integer.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;For example:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Given [34, 15, 88, 2] your solution will return 2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Given [34, -345, -1, 100] your solution will return -345&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;You can assume, for the purpose of this kata, that the supplied array will not be empty.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>03_cpp_电影票找钱问题</title>
    <link href="https://zhangpf2000.github.io/2021/04/24/codewars/03_cpp_%E7%94%B5%E5%BD%B1%E7%A5%A8%E6%89%BE%E9%92%B1%E9%97%AE%E9%A2%98.html/"/>
    <id>https://zhangpf2000.github.io/2021/04/24/codewars/03_cpp_%E7%94%B5%E5%BD%B1%E7%A5%A8%E6%89%BE%E9%92%B1%E9%97%AE%E9%A2%98.html/</id>
    <published>2021-04-24T07:59:12.000Z</published>
    <updated>2021-04-24T08:08:11.509Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://www.codewars.com/kata/555615a77ebc7c2c8a0000b8/cpp">题目链接</a><br>内容介绍</p></blockquote><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Description:</span><br><span class="line"></span><br><span class="line">The new &quot;Avengers&quot; movie has just been released! There are a lot of people at the cinema box office standing in a huge line. Each of them has a single 100, 50 or 25 dollar bill. An &quot;Avengers&quot; ticket costs 25 dollars.</span><br><span class="line"></span><br><span class="line">Vasya is currently working as a clerk. He wants to sell a ticket to every single person in this line.</span><br><span class="line"></span><br><span class="line">Can Vasya sell a ticket to every person and give change if he initially has no money and sells the tickets strictly in the order people queue?</span><br><span class="line"></span><br><span class="line">Return YES, if Vasya can sell a ticket to every person and give change with the bills he has at hand at that moment. Otherwise return NO.</span><br><span class="line">Examples:</span><br><span class="line"></span><br><span class="line">tickets(&#123;25, 25, 50&#125;) // =&gt; YES</span><br><span class="line">tickets(&#123;25, 100&#125;) // =&gt; NO. Vasya will not have enough money to give change to 100 dollars</span><br><span class="line">tickets(&#123;25, 25, 50, 50, 100&#125;) // =&gt; NO. Vasya will not have the right bills to give 75 dollars of change (you can&#x27;t make two bills of 25 from one of 50)</span><br><span class="line"></span><br></pre></td></tr></table></figure><span id="more"></span><blockquote><p>我的解题思路<br>把钱分为三类:25,50,100<br>分别创建容器,来一个钱压入相对应的容器中<br>当压入 50 时,查看 25 的容器中是否还有钱,没有就返回”NO”<br>当压入 100 时,找钱 75,分两种情况,50+25|25+25+25<br>通过判断解决<br>代码演示</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="built_in">std</span>::<span class="built_in">string</span> <span class="title">tickets</span><span class="params">(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &amp;peopleInLine)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// your code here</span></span><br><span class="line">    <span class="keyword">if</span> (peopleInLine[<span class="number">0</span>] != <span class="number">25</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;NO&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; m25;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; m50;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; m100;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> i : peopleInLine)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;i = &quot;</span> &lt;&lt; i &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">switch</span> (i)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">25</span>:</span><br><span class="line">            m25.push_back(i);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">50</span>:</span><br><span class="line">            m50.push_back(i);</span><br><span class="line">            <span class="keyword">if</span> (m25.size() == <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;NO&quot;</span>;</span><br><span class="line">            m25.pop_back();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">100</span>:</span><br><span class="line">        &#123;</span><br><span class="line">            m100.push_back(i);</span><br><span class="line">            <span class="keyword">if</span> ((m50.size() &gt; <span class="number">0</span> &amp;&amp; m25.size() &gt; <span class="number">0</span>) || (m25.size() &gt; <span class="number">3</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (m50.size() == <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    m25.pop_back();</span><br><span class="line">                    m25.pop_back();</span><br><span class="line">                    m25.pop_back();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    m50.pop_back();</span><br><span class="line">                    m25.pop_back();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;NO&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;YES&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>上面的代码还有可以优化的地方<br>比如: 100 的容器根本就不用创建,因为不用 100 找零</p></blockquote><h2 id="大佬的解题代码"><a href="#大佬的解题代码" class="headerlink" title="大佬的解题代码"></a>大佬的解题代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="built_in">std</span>::<span class="built_in">string</span> <span class="title">tickets</span><span class="params">(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; peopleInLine)</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> count[<span class="number">2</span>] = &#123;<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">auto</span> v: peopleInLine) &#123;</span><br><span class="line">    <span class="keyword">if</span>(v == <span class="number">25</span>) count[<span class="number">0</span>]++;</span><br><span class="line">    <span class="keyword">if</span>(v == <span class="number">50</span>) &#123;count[<span class="number">1</span>]++; count[<span class="number">0</span>]--;&#125;</span><br><span class="line">    <span class="keyword">if</span>(v == <span class="number">100</span>) &#123;count[<span class="number">0</span>]--; count[<span class="number">1</span>]&gt;<span class="number">0</span>? count[<span class="number">1</span>]-- : count[<span class="number">0</span>]-=<span class="number">2</span>;&#125;</span><br><span class="line">    <span class="keyword">if</span>(count[<span class="number">0</span>]&lt;<span class="number">0</span>||count[<span class="number">1</span>]&lt;<span class="number">0</span>) <span class="keyword">return</span> <span class="string">&quot;NO&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;YES&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>分析:大佬是用数组将 25 和 50 的个数保存起来<br>需要找零的时候就减一,收钱的时候就加一<br>这样就更加的节省空间了<br>当收钱 100 的时候,找零是必须要找一张 25 的<br>所以可以提前找,后续判断 50 或 25 的够不够</p></blockquote><h1 id="希望能对你有所帮助-p-o"><a href="#希望能对你有所帮助-p-o" class="headerlink" title="希望能对你有所帮助(p_o)"></a>希望能对你有所帮助(p_o)</h1>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://www.codewars.com/kata/555615a77ebc7c2c8a0000b8/cpp&quot;&gt;题目链接&lt;/a&gt;&lt;br&gt;内容介绍&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight text&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Description:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;The new &amp;quot;Avengers&amp;quot; movie has just been released! There are a lot of people at the cinema box office standing in a huge line. Each of them has a single 100, 50 or 25 dollar bill. An &amp;quot;Avengers&amp;quot; ticket costs 25 dollars.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Vasya is currently working as a clerk. He wants to sell a ticket to every single person in this line.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Can Vasya sell a ticket to every person and give change if he initially has no money and sells the tickets strictly in the order people queue?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Return YES, if Vasya can sell a ticket to every person and give change with the bills he has at hand at that moment. Otherwise return NO.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Examples:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tickets(&amp;#123;25, 25, 50&amp;#125;) // =&amp;gt; YES&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tickets(&amp;#123;25, 100&amp;#125;) // =&amp;gt; NO. Vasya will not have enough money to give change to 100 dollars&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tickets(&amp;#123;25, 25, 50, 50, 100&amp;#125;) // =&amp;gt; NO. Vasya will not have the right bills to give 75 dollars of change (you can&amp;#x27;t make two bills of 25 from one of 50)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="codewars" scheme="https://zhangpf2000.github.io/categories/codewars/"/>
    
      <category term="cpp" scheme="https://zhangpf2000.github.io/categories/codewars/cpp/"/>
    
    
      <category term="codewars" scheme="https://zhangpf2000.github.io/tags/codewars/"/>
    
      <category term="cpp" scheme="https://zhangpf2000.github.io/tags/cpp/"/>
    
  </entry>
  
  <entry>
    <title>02_shell_返回字符串中重复字符的个数</title>
    <link href="https://zhangpf2000.github.io/2021/04/24/codewars/02_shell_%E8%BF%94%E5%9B%9E%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E4%B8%AA%E6%95%B0.html/"/>
    <id>https://zhangpf2000.github.io/2021/04/24/codewars/02_shell_%E8%BF%94%E5%9B%9E%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E4%B8%AA%E6%95%B0.html/</id>
    <published>2021-04-24T06:02:39.000Z</published>
    <updated>2021-04-24T06:36:18.358Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://www.codewars.com/kata/54bf1c2cd5b56cc47f0007a1/shell">题目链接</a><br>内容介绍</p></blockquote><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Count the number of Duplicates</span><br><span class="line"></span><br><span class="line">Write a function that will return the count of distinct case-insensitive alphabetic characters and numeric digits that occur more than once in the input string. The input string can be assumed to contain only alphabets (both uppercase and lowercase) and numeric digits.</span><br><span class="line">Example</span><br><span class="line"></span><br><span class="line">&quot;abcde&quot; -&gt; 0 # no characters repeats more than once</span><br><span class="line">&quot;aabbcde&quot; -&gt; 2 # &#x27;a&#x27; and &#x27;b&#x27;</span><br><span class="line">&quot;aabBcde&quot; -&gt; 2 # &#x27;a&#x27; occurs twice and &#x27;b&#x27; twice (`b` and `B`)</span><br><span class="line">&quot;indivisibility&quot; -&gt; 1 # &#x27;i&#x27; occurs six times</span><br><span class="line">&quot;Indivisibilities&quot; -&gt; 2 # &#x27;i&#x27; occurs seven times and &#x27;s&#x27; occurs twice</span><br><span class="line">&quot;aA11&quot; -&gt; 2 # &#x27;a&#x27; and &#x27;1&#x27;</span><br><span class="line">&quot;ABBA&quot; -&gt; 2 # &#x27;A&#x27; and &#x27;B&#x27; each occur twice</span><br><span class="line">/**</span><br><span class="line"> * 给定一个字符串</span><br><span class="line"> * 忽略字符的大小写,字符串中只有英文字母和数字</span><br><span class="line"> * 返回里面有几个字符是重复的</span><br><span class="line">*/</span><br></pre></td></tr></table></figure><span id="more"></span><blockquote><p>我的解决方案<br>通过把字符串拆成单个字符<br>判断字符的重复个数<br>比较返回<br>代码掩饰</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> count</span><br><span class="line">&#123;</span><br><span class="line">        <span class="keyword">if</span> [ -z <span class="variable">$1</span> ] ; <span class="keyword">then</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&#x27;空字符串&#x27;</span></span><br><span class="line">                <span class="built_in">return</span> 0</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">        <span class="comment"># 这些是获取字符串的长度的方法</span></span><br><span class="line">        <span class="comment">#echo $1 | wc -c</span></span><br><span class="line">        <span class="comment">#var=$1</span></span><br><span class="line">        <span class="comment">#echo $&#123;#var&#125;</span></span><br><span class="line">        <span class="comment">#expr length $1</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 循环遍历把每个字符放到数组中</span></span><br><span class="line">        <span class="keyword">for</span>((i=1;i&lt;=$(expr length <span class="variable">$1</span>); i++))</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">                <span class="comment">#echo $(echo $1 | cut -b $i)</span></span><br><span class="line">                Arr[i-1]=`<span class="built_in">echo</span> <span class="variable">$1</span> | cut -b <span class="variable">$i</span>`</span><br><span class="line">        <span class="keyword">done</span></span><br><span class="line">        <span class="comment"># echo Arr[@]是打印出数组中所有的内容,以空格区分</span></span><br><span class="line">        <span class="built_in">test</span>=$(<span class="built_in">echo</span> <span class="variable">$&#123;Arr[@]&#125;</span> | tr <span class="string">&quot; &quot;</span> <span class="string">&quot;\n&quot;</span> | sort | uniq -ci | tr [:alpha:] <span class="string">&#x27; &#x27;</span> | sed s/[[:space:]]//g)</span><br><span class="line">        <span class="comment"># 上面的是对字符的处理</span></span><br><span class="line">        <span class="comment"># tr &quot; &quot; &quot;\n&quot;把空格换成换行</span></span><br><span class="line">        <span class="comment"># sort 排序</span></span><br><span class="line">        <span class="comment"># uniq -ci 去重,c是输出重复的个数,i是忽略大小写</span></span><br><span class="line">        <span class="comment"># tr [:alpha:] &#x27; &#x27;是把字符换成空格</span></span><br><span class="line">        <span class="comment"># sed s/[[:space:]]//g 删除所有的空格</span></span><br><span class="line">        <span class="comment"># 这个可能会有bug, 数字那个地方</span></span><br><span class="line">        count=0</span><br><span class="line">        <span class="keyword">for</span> t <span class="keyword">in</span> <span class="variable">$test</span></span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">            <span class="comment"># 把字符串变成数字</span></span><br><span class="line">            num=$((<span class="number">10</span>#<span class="variable">$&#123;t&#125;</span>))</span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;num = <span class="variable">$num</span>&quot;</span></span><br><span class="line">            <span class="keyword">if</span> [ <span class="variable">$num</span> -gt 1 ] ; <span class="keyword">then</span></span><br><span class="line">                <span class="comment"># 数字自增</span></span><br><span class="line">                count=$((<span class="variable">$count</span>+<span class="number">1</span>))</span><br><span class="line">            <span class="keyword">fi</span></span><br><span class="line">        <span class="keyword">done</span></span><br><span class="line">        <span class="built_in">return</span> <span class="variable">$count</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">count <span class="variable">$1</span></span><br><span class="line"><span class="built_in">echo</span> $?</span><br><span class="line"></span><br><span class="line"><span class="comment"># 我是写了个函数</span></span><br><span class="line"><span class="comment"># 传入的参数是$1</span></span><br><span class="line"><span class="comment"># 最后的echo $?是打印调用函数的返回值</span></span><br></pre></td></tr></table></figure><blockquote><p>我的解决方案还是有很大的缺陷<br>过了测试是侥幸<br>里面对字符串的处理还是不清楚</p></blockquote><h2 id="看看大佬的解决方案"><a href="#看看大佬的解决方案" class="headerlink" title="看看大佬的解决方案"></a>看看大佬的解决方案</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$1</span> | grep -o . | sort -f | uniq -id | wc -l</span><br><span class="line"><span class="comment"># grep -o .</span></span><br><span class="line"><span class="comment"># -o, --only-matching       只显示行中非空匹配部分</span></span><br><span class="line"><span class="comment"># -o 后面的是正则表达式</span></span><br><span class="line"><span class="comment"># sort -f :忽略大小写进行排序</span></span><br><span class="line"><span class="comment"># uniq -id</span></span><br><span class="line"><span class="comment"># 去重,-i 是忽略大小写,-d是打印重复的行,不重复的不显示</span></span><br><span class="line"><span class="comment"># wc -l, 输出行数</span></span><br><span class="line"><span class="comment"># 太强了</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># =====================================</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$1</span> | tr [A-Z] [a-z] | grep -o . | sort | uniq -d | wc -l</span><br><span class="line"><span class="comment"># 这个大致都差不多</span></span><br><span class="line"><span class="comment"># tr [A-Z] [a-z]是通过把大写都换成小写的,忽略大小写进行排序</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># =====================================</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$1</span> \</span><br><span class="line">   | tr <span class="string">&#x27;[:upper:]&#x27;</span> <span class="string">&#x27;[:lower:]&#x27;</span> \</span><br><span class="line">   | awk -F <span class="string">&#x27;&#x27;</span> <span class="string">&#x27;BEGIN&#123;OFS=&quot;\n&quot;&#125; &#123;$1=$1; print $0&#125;&#x27;</span> \</span><br><span class="line">   | sort \</span><br><span class="line">   | uniq -c \</span><br><span class="line">   | awk <span class="string">&#x27;&#123;if ($1&gt;=2) print $2&#125;&#x27;</span> \</span><br><span class="line">   | wc -l</span><br><span class="line"></span><br><span class="line"><span class="comment"># =====================================</span></span><br><span class="line">ls -al</span><br><span class="line"><span class="comment"># why?????????????/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># =====================================</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$@</span> | grep -o . | awk <span class="string">&#x27;&#123;print toupper($0)&#125;&#x27;</span> | sort | uniq -idc | wc -l</span><br></pre></td></tr></table></figure><h2 id="学到的知识点"><a href="#学到的知识点" class="headerlink" title="学到的知识点"></a>学到的知识点</h2><blockquote><p>grep -o .<br>sort -f<br>uniq -idc<br>tr ‘xxx’ ‘xxx’<br>wc -l<br>字符串转数字+shell 中数字相加</p></blockquote><figure class="highlight bash"><figcaption><span>字符串转数字 >folded</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#linux shell 字符串转数字</span></span><br><span class="line"><span class="comment">#转载：https://blog.csdn.net/whish1994/article/details/78379659</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#原型： value=$((n#$&#123;key&#125;Xm))</span></span><br><span class="line"><span class="comment">#value:自定义变量得到运算的值</span></span><br><span class="line"><span class="comment">#n:欲转成的进制数； 2进制就是2，10进制就是10</span></span><br><span class="line"><span class="comment">#key:字符串变量</span></span><br><span class="line"><span class="comment">#X：操作符；如+ - * /  &amp;...</span></span><br><span class="line"><span class="comment">#m:操作数</span></span><br><span class="line"><span class="comment">#实例1：10进制字符32加上32</span></span><br><span class="line"></span><br><span class="line">a=<span class="string">&#x27;32&#x27;</span></span><br><span class="line">value=$((<span class="number">10</span>#<span class="variable">$&#123;a&#125;</span>+<span class="number">32</span>))</span><br><span class="line"><span class="comment">#=================</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment">#本脚本测试shell脚本中整型变量自增 加1的几种方法</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#定义整型变量</span></span><br><span class="line">a=1</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$a</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#第一种整型变量自增方式</span></span><br><span class="line">a=$((<span class="variable">$a</span>+<span class="number">1</span>))</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$a</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#第二种整型变量自增方式</span></span><br><span class="line">a=$[<span class="variable">$a</span>+1]</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$a</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#第三种整型变量自增方式</span></span><br><span class="line">a=`expr <span class="variable">$a</span> + 1`</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$a</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#第四种整型变量自增方式</span></span><br><span class="line"><span class="built_in">let</span> a++</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$a</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#第五种整型变量自增方式</span></span><br><span class="line"><span class="built_in">let</span> a+=1</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$a</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#第六种整型变量自增方式</span></span><br><span class="line">((a++))</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$a</span></span><br><span class="line">————————————————</span><br><span class="line">版权声明：本文为CSDN博主「yumushui」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。</span><br><span class="line">原文链接：https://blog.csdn.net/yumushui/article/details/53469845</span><br></pre></td></tr></table></figure><h1 id="希望能对你有所帮助-p-o"><a href="#希望能对你有所帮助-p-o" class="headerlink" title="希望能对你有所帮助(p_o)"></a>希望能对你有所帮助(p_o)</h1>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://www.codewars.com/kata/54bf1c2cd5b56cc47f0007a1/shell&quot;&gt;题目链接&lt;/a&gt;&lt;br&gt;内容介绍&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight text&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Count the number of Duplicates&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Write a function that will return the count of distinct case-insensitive alphabetic characters and numeric digits that occur more than once in the input string. The input string can be assumed to contain only alphabets (both uppercase and lowercase) and numeric digits.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Example&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;abcde&amp;quot; -&amp;gt; 0 # no characters repeats more than once&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;aabbcde&amp;quot; -&amp;gt; 2 # &amp;#x27;a&amp;#x27; and &amp;#x27;b&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;aabBcde&amp;quot; -&amp;gt; 2 # &amp;#x27;a&amp;#x27; occurs twice and &amp;#x27;b&amp;#x27; twice (`b` and `B`)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;indivisibility&amp;quot; -&amp;gt; 1 # &amp;#x27;i&amp;#x27; occurs six times&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;Indivisibilities&amp;quot; -&amp;gt; 2 # &amp;#x27;i&amp;#x27; occurs seven times and &amp;#x27;s&amp;#x27; occurs twice&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;aA11&amp;quot; -&amp;gt; 2 # &amp;#x27;a&amp;#x27; and &amp;#x27;1&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;ABBA&amp;quot; -&amp;gt; 2 # &amp;#x27;A&amp;#x27; and &amp;#x27;B&amp;#x27; each occur twice&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 给定一个字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 忽略字符的大小写,字符串中只有英文字母和数字&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 返回里面有几个字符是重复的&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="codewars" scheme="https://zhangpf2000.github.io/categories/codewars/"/>
    
      <category term="shell" scheme="https://zhangpf2000.github.io/categories/codewars/shell/"/>
    
    
      <category term="codewars" scheme="https://zhangpf2000.github.io/tags/codewars/"/>
    
      <category term="shell" scheme="https://zhangpf2000.github.io/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>01_cpp_返回字符串中的最大值和最小值</title>
    <link href="https://zhangpf2000.github.io/2021/04/24/codewars/01_cpp_%E8%BF%94%E5%9B%9E%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC%E5%92%8C%E6%9C%80%E5%B0%8F%E5%80%BC.html/"/>
    <id>https://zhangpf2000.github.io/2021/04/24/codewars/01_cpp_%E8%BF%94%E5%9B%9E%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC%E5%92%8C%E6%9C%80%E5%B0%8F%E5%80%BC.html/</id>
    <published>2021-04-24T02:05:13.000Z</published>
    <updated>2021-04-24T02:43:51.892Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://www.codewars.com/kata/554b4ac871d6813a03000035/cpp">题目链接</a><br>内容介绍:</p></blockquote><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">In this little assignment you are given a string of space separated numbers, and have to return the highest and lowest number.</span><br><span class="line"></span><br><span class="line">Example:</span><br><span class="line"></span><br><span class="line">highAndLow(&quot;1 2 3 4 5&quot;);  // return &quot;5 1&quot;</span><br><span class="line">highAndLow(&quot;1 2 -3 4 5&quot;); // return &quot;5 -3&quot;</span><br><span class="line">highAndLow(&quot;1 9 3 4 -5&quot;); // return &quot;9 -5&quot;</span><br><span class="line"></span><br><span class="line">Notes:</span><br><span class="line"></span><br><span class="line">    All numbers are valid Int32, no need to validate them.</span><br><span class="line">    There will always be at least one number in the input string.</span><br><span class="line">    Output string must be two numbers separated by a single space, and highest number is first.</span><br></pre></td></tr></table></figure><span id="more"></span><blockquote><p>我的解决方案</p><ul><li>for 循环遍历字符串中的每个字符</li><li>通过判断将字符组成新的字符串(数字字符串)</li><li>把这些数字字符串放入容器 vector 中</li><li>依次弹出容器中的字符串,转换成数字</li><li>进行数字比较,确定最小值和最大值</li><li>返回最大值和最小值<br>我的提交代码如下</li></ul></blockquote><figure class="highlight cpp"><figcaption><span>我的解决方案 >folded</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">test</span><span class="params">(<span class="built_in">std</span>::<span class="built_in">string</span> s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> tag = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">/* code */</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; s.length(); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/* code */</span></span><br><span class="line">        <span class="keyword">if</span> (s[i] == <span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            tag = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        num = num * <span class="number">10</span> + (s[i] - <span class="number">48</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    num = tag ? num : num * <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">return</span> num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">std</span>::<span class="built_in">string</span> <span class="title">highAndLow</span><span class="params">(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span>&amp; numbers)</span></span>&#123;</span><br><span class="line">    <span class="comment">//your code here</span></span><br><span class="line">    <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> num_min = <span class="number">0</span>, num_max = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt; vs;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> str = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt;= numbers.length(); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (numbers[i] != <span class="string">&#x27; &#x27;</span> &amp;&amp; (numbers[i] == <span class="string">&#x27;-&#x27;</span> || (<span class="number">48</span> &lt;= numbers[i] &amp;&amp; numbers[i] &lt;= <span class="number">57</span>)))</span><br><span class="line">        &#123;</span><br><span class="line">            str = str + numbers[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (numbers[i] == <span class="string">&#x27; &#x27;</span> || numbers[i] == <span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            vs.push_back(str);</span><br><span class="line">            str = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            str = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> s1 = <span class="string">&quot;&quot;</span>, s2 = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    num_max = num_min = test(vs[<span class="number">0</span>]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; vs.size(); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        num = test(vs[i]);</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;num = &quot;</span> &lt;&lt; num &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">        s1 = ((num &lt;= num_min) ? vs[i] : s1);</span><br><span class="line">        s2 = ((num &gt;= num_max) ? vs[i] : s2);</span><br><span class="line">        num_min = ((num &lt; num_min) ? num : num_min);</span><br><span class="line">        num_max = ((num &gt; num_max) ? num : num_max);</span><br><span class="line">        num = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    str = s2 + <span class="string">&#x27; &#x27;</span> + s1;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>我的方案还是不好,代码篇幅太大<br>空间时间复杂度都比较高<br>思路没有问题,但是还可以再优化</p></blockquote><figure class="highlight cpp"><figcaption><span>优化方案 >folded</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;limits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">test</span><span class="params">(<span class="built_in">std</span>::<span class="built_in">string</span> s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> tag = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">/* code */</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; s.length(); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/* code */</span></span><br><span class="line">        <span class="keyword">if</span> (s[i] == <span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            tag = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        num = num * <span class="number">10</span> + (s[i] - <span class="number">48</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    num = tag ? num : num * <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">return</span> num;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">std</span>::<span class="built_in">string</span> <span class="title">highAndLow</span><span class="params">(<span class="built_in">std</span>::<span class="built_in">string</span> numbers)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//your code here</span></span><br><span class="line">    <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> num_min = <span class="built_in">std</span>::numeric_limits&lt;<span class="keyword">int</span>&gt;::max(), num_max = <span class="built_in">std</span>::numeric_limits&lt;<span class="keyword">int</span>&gt;::min();</span><br><span class="line">    <span class="comment">// 这个是让num_min=int范围内的最大值,num_max=int范围内的最小值</span></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> str = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> s1 = <span class="string">&quot;&quot;</span>, s2 = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt;= numbers.length(); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (numbers[i] != <span class="string">&#x27; &#x27;</span> &amp;&amp; (numbers[i] == <span class="string">&#x27;-&#x27;</span> || (<span class="number">48</span> &lt;= numbers[i] &amp;&amp; numbers[i] &lt;= <span class="number">57</span>)))</span><br><span class="line">        &#123;</span><br><span class="line">            str = str + numbers[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (numbers[i] == <span class="string">&#x27; &#x27;</span> || numbers[i] == <span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            num = test(str);</span><br><span class="line">            s1 = ((num &lt;= num_min) ? str : s1);</span><br><span class="line">            s2 = ((num &gt;= num_max) ? str : s2);</span><br><span class="line">            num_min = ((num &lt; num_min) ? num : num_min);</span><br><span class="line">            num_max = ((num &gt; num_max) ? num : num_max);</span><br><span class="line">            str=<span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            str = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    str = s2 + <span class="string">&#x27; &#x27;</span> + s1;</span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>上面这个解决方案中<br>舍弃了容器,直接让确定的数字字符串转换成数字返回<br>然后进行比较<br>不过这个使用了<code>&lt;limits&gt;</code>这个头文件<br>是为了让比较的初始值为最大(num_min)和最小(num_max)<br>防止出现无法比较的情况,这个方案就比上面那个要好很多了</p></blockquote><hr><h1 id="大佬的解决方案"><a href="#大佬的解决方案" class="headerlink" title="大佬的解决方案"></a>大佬的解决方案</h1><figure class="highlight cpp"><figcaption><span>大佬的解决方案</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;limits&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">std</span>::<span class="built_in">string</span> <span class="title">highAndLow</span><span class="params">(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span>&amp; numbers)</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="built_in">std</span>::<span class="built_in">stringstream</span> <span class="title">ss</span><span class="params">(numbers)</span></span>;</span><br><span class="line">  <span class="keyword">int</span> temp, min = <span class="built_in">std</span>::numeric_limits&lt;<span class="keyword">int</span>&gt;::max(), max = <span class="built_in">std</span>::numeric_limits&lt;<span class="keyword">int</span>&gt;::min();</span><br><span class="line">  <span class="keyword">while</span> (ss &gt;&gt; temp) &#123;</span><br><span class="line">    min = (temp &lt; min) ? temp : min;</span><br><span class="line">    max = (temp &gt; max) ? temp : max;</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">std</span>::to_string(max) + <span class="string">&quot; &quot;</span> + <span class="built_in">std</span>::to_string(min);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 这里主要是使用了#include &lt;sstring&gt;头文件</span></span><br><span class="line"><span class="comment"> * 以下是我的对sstring的推测</span></span><br><span class="line"><span class="comment"> * 头文件中的stream是流的意思</span></span><br><span class="line"><span class="comment"> * 常见的有iostream(标准输入输出流),和fstream(文件输入输出流)</span></span><br><span class="line"><span class="comment"> * iostream中有istream和ostream两个常见的类</span></span><br><span class="line"><span class="comment"> * fstream中有fstream,ifstream,ofstream三个类(常见的)</span></span><br><span class="line"><span class="comment"> * 推测sstream是字符串流处理,专门处理字符串流的</span></span><br><span class="line"><span class="comment"> * sstream有stringstream,istringstream和ostringstream三个类</span></span><br><span class="line"><span class="comment"> * 用法和上面的fstream差不多,也支持`&gt;&gt;`和`&lt;&lt;`运算符</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 上面大佬的解决思路大致就是</span></span><br><span class="line"><span class="comment"> * 把传入的字符串传入字符串流ss中,</span></span><br><span class="line"><span class="comment"> * ss &gt;&gt; temp是把字符串流中的数据输入到temp(int类型)中</span></span><br><span class="line"><span class="comment"> * 然后进行比较判断,最后把最大数和最小数转换成字符串</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * `&gt;&gt;` 这个具有和std::cin &gt;&gt; test差不多的特性</span></span><br><span class="line"><span class="comment"> * 输入空格后就停止,然后进行下一个</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="学到的知识点"><a href="#学到的知识点" class="headerlink" title="学到的知识点"></a>学到的知识点</h2><blockquote><p><code>#include &lt;sstring&gt;</code><br><code>#include &lt;limits&gt;</code><br>主要是<code>sstring</code>头文件,以后可以方便的处理字符串数据<br>可以多了解了解这个头文件中的类,函数<br><code>sstring</code>举例</p></blockquote><figure class="highlight cpp"><figcaption><span>sstring例子</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">stringstream</span> stream;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> result;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">1000</span>;</span><br><span class="line">    stream &lt;&lt; i; <span class="comment">//将int输入流</span></span><br><span class="line">    stream &gt;&gt; result; <span class="comment">//从stream中抽取前面插入的int值</span></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; result &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>; <span class="comment">// print the string &quot;1000&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="希望能对你有所帮助-p-o"><a href="#希望能对你有所帮助-p-o" class="headerlink" title="希望能对你有所帮助(p_o)"></a>希望能对你有所帮助(p_o)</h1>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://www.codewars.com/kata/554b4ac871d6813a03000035/cpp&quot;&gt;题目链接&lt;/a&gt;&lt;br&gt;内容介绍:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight text&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;In this little assignment you are given a string of space separated numbers, and have to return the highest and lowest number.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Example:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;highAndLow(&amp;quot;1 2 3 4 5&amp;quot;);  // return &amp;quot;5 1&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;highAndLow(&amp;quot;1 2 -3 4 5&amp;quot;); // return &amp;quot;5 -3&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;highAndLow(&amp;quot;1 9 3 4 -5&amp;quot;); // return &amp;quot;9 -5&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Notes:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    All numbers are valid Int32, no need to validate them.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    There will always be at least one number in the input string.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Output string must be two numbers separated by a single space, and highest number is first.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="codewars" scheme="https://zhangpf2000.github.io/categories/codewars/"/>
    
      <category term="cpp" scheme="https://zhangpf2000.github.io/categories/codewars/cpp/"/>
    
    
      <category term="codewars" scheme="https://zhangpf2000.github.io/tags/codewars/"/>
    
      <category term="cpp" scheme="https://zhangpf2000.github.io/tags/cpp/"/>
    
  </entry>
  
  <entry>
    <title>01_初步使用docker</title>
    <link href="https://zhangpf2000.github.io/2021/04/23/docker/01_%E5%88%9D%E6%AD%A5%E4%BD%BF%E7%94%A8docker.html/"/>
    <id>https://zhangpf2000.github.io/2021/04/23/docker/01_%E5%88%9D%E6%AD%A5%E4%BD%BF%E7%94%A8docker.html/</id>
    <published>2021-04-23T08:42:37.000Z</published>
    <updated>2021-04-23T09:15:24.138Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要<br>第一步:安装 Docker<br>终端执行<code>curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun</code><br>注意:在我的 debian 的使用中,每次都需要<code>sudo</code><br>为了不节省可以使用以下办法解决<br><code>sudo usermod -aG docker $&#123;USER&#125;</code><br><code>sudo service docker restart</code><br>重启操作系统即可</p><hr><p>第二步:常规操作</p><ul><li><a href="#搜索镜像">search</a></li><li><a href="#docker-拉取镜像">pull</a></li><li><a href="#docker-列出镜像列表">images</a></li><li><a href="#docker-创建容器">run</a></li><li><a href="#docker-启动容器">容器的停止启动和重启等</a></li><li><a href="#docker-启动容器">链接容器</a></li><li><a href="#docker-删除容器和镜像">删除容器</a></li><li><a href="#docker-删除容器和镜像">删除镜像</a></li></ul></blockquote><h1 id="常规操作"><a href="#常规操作" class="headerlink" title="常规操作"></a>常规操作</h1><h2 id="搜索镜像"><a href="#搜索镜像" class="headerlink" title="搜索镜像"></a>搜索镜像</h2><figure class="highlight bash"><figcaption><span>搜索镜像 >folded</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">zpf@debian:~/Test/docker$ docker search ubuntu</span><br><span class="line">NAME                                                      DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED</span><br><span class="line">ubuntu                                                    Ubuntu is a Debian-based Linux operating sys…   12133     [OK]</span><br><span class="line">dorowu/ubuntu-desktop-lxde-vnc                            Docker image to provide HTML5 VNC interface …   523                  [OK]</span><br><span class="line">websphere-liberty                                         WebSphere Liberty multi-architecture images …   267       [OK]</span><br><span class="line">rastasheep/ubuntu-sshd                                    Dockerized SSH service, built on top of offi…   249                  [OK]</span><br><span class="line">consol/ubuntu-xfce-vnc                                    Ubuntu container with <span class="string">&quot;headless&quot;</span> VNC session…   236                  [OK]</span><br><span class="line">ubuntu-upstart                                            Upstart is an event-based replacement <span class="keyword">for</span> th…   110       [OK]</span><br><span class="line">1and1internet/ubuntu-16-nginx-php-phpmyadmin-mysql-5      ubuntu-16-nginx-php-phpmyadmin-mysql-5          50                   [OK]</span><br><span class="line">ubuntu-debootstrap                                        debootstrap --variant=minbase --components=m…   44        [OK]</span><br><span class="line">open-liberty                                              Open Liberty multi-architecture images based…   43        [OK]</span><br><span class="line">nuagebec/ubuntu                                           Simple always updated Ubuntu docker images w…   24                   [OK]</span><br><span class="line">i386/ubuntu                                               Ubuntu is a Debian-based Linux operating sys…   24</span><br><span class="line">solita/ubuntu-systemd                                     Ubuntu + systemd                                24                   [OK]</span><br><span class="line">1and1internet/ubuntu-16-apache-php-5.6                    ubuntu-16-apache-php-5.6                        14                   [OK]</span><br><span class="line">1and1internet/ubuntu-16-apache-php-7.0                    ubuntu-16-apache-php-7.0                        13                   [OK]</span><br><span class="line">1and1internet/ubuntu-16-nginx-php-phpmyadmin-mariadb-10   ubuntu-16-nginx-php-phpmyadmin-mariadb-10       11                   [OK]</span><br><span class="line">1and1internet/ubuntu-16-nginx-php-5.6-wordpress-4         ubuntu-16-nginx-php-5.6-wordpress-4             9                    [OK]</span><br><span class="line">1and1internet/ubuntu-16-nginx-php-5.6                     ubuntu-16-nginx-php-5.6                         8                    [OK]</span><br><span class="line">1and1internet/ubuntu-16-apache-php-7.1                    ubuntu-16-apache-php-7.1                        6                    [OK]</span><br><span class="line">1and1internet/ubuntu-16-nginx-php-7.0                     ubuntu-16-nginx-php-7.0                         4                    [OK]</span><br><span class="line">pivotaldata/ubuntu                                        A quick freshening-up of the base Ubuntu doc…   4</span><br><span class="line">pivotaldata/ubuntu16.04-build                             Ubuntu 16.04 image <span class="keyword">for</span> GPDB compilation         2</span><br><span class="line">pivotaldata/ubuntu-gpdb-dev                               Ubuntu images <span class="keyword">for</span> GPDB development              1</span><br><span class="line">1and1internet/ubuntu-16-php-7.1                           ubuntu-16-php-7.1                               1                    [OK]</span><br><span class="line">smartentry/ubuntu                                         ubuntu with smartentry                          1                    [OK]</span><br><span class="line">1and1internet/ubuntu-16-rspec                             ubuntu-16-rspec                                 0                    [OK]</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="docker-拉取镜像"><a href="#docker-拉取镜像" class="headerlink" title="docker 拉取镜像"></a>docker 拉取镜像</h2><figure class="highlight bash"><figcaption><span>拉取镜像 >folded</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">zpf@debian:~/Test/docker$ docker pull ubuntu:latest</span><br><span class="line">latest: Pulling from library/ubuntu</span><br><span class="line">a70xxxxxxx98: Pull complete</span><br><span class="line">c43xxxxxxxf8: Pull complete</span><br><span class="line">10exxxxxxxc0: Pull complete</span><br><span class="line">Digest: sha256:3c9c713e097xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx9d695fb8039aa1f</span><br><span class="line">Status: Downloaded newer image <span class="keyword">for</span> ubuntu:latest</span><br><span class="line">docker.io/library/ubuntu:latest</span><br></pre></td></tr></table></figure><h2 id="docker-列出镜像列表"><a href="#docker-列出镜像列表" class="headerlink" title="docker 列出镜像列表"></a>docker 列出镜像列表</h2><figure class="highlight bash"><figcaption><span>镜像列表</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">zpf@debian:~/Test/docker$ docker images</span><br><span class="line">REPOSITORY   TAG       IMAGE ID       CREATED       SIZE</span><br><span class="line">ubuntu       latest    26bxxxxxxx2b   2 weeks ago   72.9MB</span><br><span class="line">zpf@debian:~/Test/docker$ docker images -a</span><br><span class="line">REPOSITORY   TAG       IMAGE ID       CREATED       SIZE</span><br><span class="line">ubuntu       latest    26bxxxxxxx2b   2 weeks ago   72.9MB</span><br><span class="line"><span class="comment"># -a 参数可以列出一些其他的镜像</span></span><br></pre></td></tr></table></figure><h2 id="docker-创建容器"><a href="#docker-创建容器" class="headerlink" title="docker 创建容器"></a>docker 创建容器</h2><figure class="highlight bash"><figcaption><span>docker创建容器</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">zpf@debian:~/Test/docker$ docker run -i -t --name hello ubuntu /bin/bash</span><br><span class="line">root@7c5xxxxxxx01:/<span class="comment"># ls</span></span><br><span class="line">bin  boot  dev  etc  home  lib  lib32  lib64  libx32  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 命令的格式为 docker run &lt;选项&gt; &lt;镜像名称&gt; &lt;要运行的文件&gt;</span></span><br><span class="line"><span class="comment"># 上面的意思是把ubuntu创建为名为hello的容器后</span></span><br><span class="line"><span class="comment"># 运行ubuntu镜像中的/bin/bash</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 使用-i(interactive)、-t(Pseudo-tty)选项可以在运行的Bash Shell中进行输入和输出</span></span><br><span class="line"><span class="comment"># 使用--name选项可以指定容器的名称,若不指定,docker会自动生成名称并进行指定</span></span><br><span class="line"><span class="comment"># 使用exit则退出容器,回到主机的shell终端中</span></span><br></pre></td></tr></table></figure><h2 id="docker-查看容器列表"><a href="#docker-查看容器列表" class="headerlink" title="docker 查看容器列表"></a>docker 查看容器列表</h2><figure class="highlight bash"><figcaption><span>docker查看容器列表</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">zpf@debian:~/Test/docker$ docker ps</span><br><span class="line">CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES</span><br><span class="line">zpf@debian:~/Test/docker$ docker ps -a</span><br><span class="line">CONTAINER ID   IMAGE     COMMAND       CREATED         STATUS                     PORTS     NAMES</span><br><span class="line">7c574e977a01   ubuntu    <span class="string">&quot;/bin/bash&quot;</span>   5 minutes ago   Exited (0) 7 seconds ago             hello</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 添加-a参数可以列出所有的容器</span></span><br><span class="line"><span class="comment"># 默认的ps是列出所有活动的容器</span></span><br><span class="line"><span class="comment">#</span></span><br></pre></td></tr></table></figure><h2 id="docker-启动容器"><a href="#docker-启动容器" class="headerlink" title="docker 启动容器"></a>docker 启动容器</h2><figure class="highlight bash"><figcaption><span>docker启动/重启/停止容器</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">zpf@debian:~/Test/docker$ docker ps</span><br><span class="line">CONTAINER ID   IMAGE     COMMAND       CREATED         STATUS          PORTS     NAMES</span><br><span class="line">7c574e977a01   ubuntu    <span class="string">&quot;/bin/bash&quot;</span>   7 minutes ago   Up 25 seconds             hello</span><br><span class="line">zpf@debian:~/Test/docker$ docker restart hello</span><br><span class="line">hello</span><br><span class="line">zpf@debian:~/Test/docker$ docker ps</span><br><span class="line">CONTAINER ID   IMAGE     COMMAND       CREATED         STATUS         PORTS     NAMES</span><br><span class="line">7c574e977a01   ubuntu    <span class="string">&quot;/bin/bash&quot;</span>   7 minutes ago   Up 2 seconds             hello</span><br><span class="line">zpf@debian:~/Test/docker$ docker stop hello</span><br><span class="line">hello</span><br><span class="line">zpf@debian:~/Test/docker$ docker ps</span><br><span class="line">CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES</span><br><span class="line">zpf@debian:~/Test/docker$ docker ps -a</span><br><span class="line">CONTAINER ID   IMAGE     COMMAND       CREATED         STATUS                     PORTS     NAMES</span><br><span class="line">7c574e977a01   ubuntu    <span class="string">&quot;/bin/bash&quot;</span>   7 minutes ago   Exited (0) 4 seconds ago             hello</span><br><span class="line">zpf@debian:~/Test/docker$ docker start hello</span><br><span class="line">hello</span><br><span class="line">zpf@debian:~/Test/docker$ docker ps</span><br><span class="line">CONTAINER ID   IMAGE     COMMAND       CREATED         STATUS         PORTS     NAMES</span><br><span class="line">7c574e977a01   ubuntu    <span class="string">&quot;/bin/bash&quot;</span>   8 minutes ago   Up 2 seconds             hello</span><br><span class="line">zpf@debian:~/Test/docker$ docker ps</span><br><span class="line">CONTAINER ID   IMAGE     COMMAND       CREATED         STATUS         PORTS     NAMES</span><br><span class="line">7c574e977a01   ubuntu    <span class="string">&quot;/bin/bash&quot;</span>   9 minutes ago   Up 3 seconds             hello</span><br><span class="line">zpf@debian:~/Test/docker$ docker attach hello</span><br><span class="line">root@7c574e977a01:/<span class="comment"># ls</span></span><br><span class="line">bin  boot  dev  etc  home  lib  lib32  lib64  libx32  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var</span><br></pre></td></tr></table></figure><h2 id="docker-删除容器和镜像"><a href="#docker-删除容器和镜像" class="headerlink" title="docker 删除容器和镜像"></a>docker 删除容器和镜像</h2><figure class="highlight bash"><figcaption><span>docker删除容器和镜像</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除容器</span></span><br><span class="line">zpf@debian:~/Test/docker$ docker ps</span><br><span class="line">CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES</span><br><span class="line">zpf@debian:~/Test/docker$ docker ps -a</span><br><span class="line">CONTAINER ID   IMAGE     COMMAND       CREATED          STATUS                      PORTS     NAMES</span><br><span class="line">7c574e977a01   ubuntu    <span class="string">&quot;/bin/bash&quot;</span>   10 minutes ago   Exited (0) 13 seconds ago             hello</span><br><span class="line">zpf@debian:~/Test/docker$ docker rm hello</span><br><span class="line">hello</span><br><span class="line">zpf@debian:~/Test/docker$ docker ps</span><br><span class="line">CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES</span><br><span class="line">zpf@debian:~/Test/docker$ docker ps -a</span><br><span class="line">CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES</span><br><span class="line"><span class="comment"># 删除镜像</span></span><br><span class="line">zpf@debian:~/Test/docker$ docker images</span><br><span class="line">REPOSITORY   TAG       IMAGE ID       CREATED       SIZE</span><br><span class="line">ubuntu       latest    26b77e58432b   2 weeks ago   72.9MB</span><br><span class="line">zpf@debian:~/Test/docker$ docker images -a</span><br><span class="line">REPOSITORY   TAG       IMAGE ID       CREATED       SIZE</span><br><span class="line">ubuntu       latest    26b77e58432b   2 weeks ago   72.9MB</span><br><span class="line">zpf@debian:~/Test/docker$ docker rmi ubuntu:latest</span><br><span class="line">Untagged: ubuntu:latest</span><br><span class="line">Untagged: ubuntu@sha256:3c9c713e95aa06xxxxxxxxxxd695fb8039aa1f</span><br><span class="line">Deleted: sha256:26b77e58ab82576a0xxxxxxxx24f5cf3dac146d6</span><br><span class="line">Deleted: sha256:9de65d1ec1e4c8xxxxxxxxxfbd7d098d6234f359</span><br><span class="line">Deleted: sha256:e0f8e3axxxxxxxxxxxf17c2bf9d8e5e248cfe5b0</span><br><span class="line">Deleted: sha256:0e64bafdc7ee8xxxxxxxxxxxxeeb569f4a83db56d505</span><br><span class="line">zpf@debian:~/Test/docker$ docker images</span><br><span class="line">REPOSITORY   TAG       IMAGE ID   CREATED   SIZE</span><br><span class="line">zpf@debian:~/Test/docker$ docker images -a</span><br><span class="line">REPOSITORY   TAG       IMAGE ID   CREATED   SIZE</span><br></pre></td></tr></table></figure><h1 id="希望能对你有所帮助-p-o"><a href="#希望能对你有所帮助-p-o" class="headerlink" title="希望能对你有所帮助(p_o)"></a>希望能对你有所帮助(p_o)</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;摘要&lt;br&gt;第一步:安装 Docker&lt;br&gt;终端执行&lt;code&gt;curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun&lt;/code&gt;&lt;br&gt;注意:在我的 debian 
      
    
    </summary>
    
    
      <category term="linux" scheme="https://zhangpf2000.github.io/categories/linux/"/>
    
      <category term="docker" scheme="https://zhangpf2000.github.io/categories/linux/docker/"/>
    
    
      <category term="docker" scheme="https://zhangpf2000.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>docker学习之路</title>
    <link href="https://zhangpf2000.github.io/2021/04/22/docker/docker%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF.html/"/>
    <id>https://zhangpf2000.github.io/2021/04/22/docker/docker%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF.html/</id>
    <published>2021-04-22T09:22:33.000Z</published>
    <updated>2021-04-22T10:48:52.082Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>学习 docker,并通过博客的方式记录下来<br>参考的书籍是<code>Docker 基础与实战</code></p><ul><li>书名: Docker 基础与实战</li><li>ISBN: 978-7-115-41962-0</li><li>封面</li><li><img src="https://bkimg.cdn.bcebos.com/pic/7af40ad162d9f2d39e7d5e05a7ec8a136227cce8?x-bce-process=image/resize,m_lfit,w_268,limit_1/format,f_jpg" alt="封面"></li></ul></blockquote><span id="more"></span><blockquote><p>目录<br>第 01 章: Docker<br>第 02 章: 安装 Docker<br>第 03 章: 使用 Docker<br>第 04 章: 创建 Docker 镜像<br>第 05 章: 查看 Docker<br>第 06 章: 灵活使用 Docker<br>第 07 章: 详细了解 Dockerfile<br>第 08 章: 使用 Docker 部署应用程序<br>第 09 章: Docker 监控<br>第 10 章: 在 Amazon Web Services 中使用 Docker<br>第 11 章: 在 Google Cloud Platform 中使用 Docker<br>第 12 章: 使用 Docker Hub<br>第 13 章: 使用 Docker Remote API<br>第 14 章: 使用 CentOS<br>第 15 章: 使用 Docker 搭建 WordPress 博客<br>第 16 章: 使用 Docker 构建 Ruby on Rails 应用<br>第 17 章: 使用 Docker 构建 Django 应用<br>第 18 章: Docker 应用案例<br>第 19 章: Docker 命令与选项列表</p></blockquote><h1 id="希望能对你有所帮助-p-o"><a href="#希望能对你有所帮助-p-o" class="headerlink" title="希望能对你有所帮助(p_o)"></a>希望能对你有所帮助(p_o)</h1>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;h1 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h1&gt;&lt;p&gt;学习 docker,并通过博客的方式记录下来&lt;br&gt;参考的书籍是&lt;code&gt;Docker 基础与实战&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;书名: Docker 基础与实战&lt;/li&gt;
&lt;li&gt;ISBN: 978-7-115-41962-0&lt;/li&gt;
&lt;li&gt;封面&lt;/li&gt;
&lt;li&gt;&lt;img src=&quot;https://bkimg.cdn.bcebos.com/pic/7af40ad162d9f2d39e7d5e05a7ec8a136227cce8?x-bce-process=image/resize,m_lfit,w_268,limit_1/format,f_jpg&quot; alt=&quot;封面&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="linux" scheme="https://zhangpf2000.github.io/categories/linux/"/>
    
      <category term="docker" scheme="https://zhangpf2000.github.io/categories/linux/docker/"/>
    
    
      <category term="docker" scheme="https://zhangpf2000.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>01_学习Shell之前初步了解linux系统</title>
    <link href="https://zhangpf2000.github.io/2021/04/22/Linux_Bash/01_%E5%AD%A6%E4%B9%A0Shell%E4%B9%8B%E5%89%8D%E5%88%9D%E6%AD%A5%E4%BA%86%E8%A7%A3linux%E7%B3%BB%E7%BB%9F.html/"/>
    <id>https://zhangpf2000.github.io/2021/04/22/Linux_Bash/01_%E5%AD%A6%E4%B9%A0Shell%E4%B9%8B%E5%89%8D%E5%88%9D%E6%AD%A5%E4%BA%86%E8%A7%A3linux%E7%B3%BB%E7%BB%9F.html/</id>
    <published>2021-04-22T08:23:01.000Z</published>
    <updated>2021-04-22T10:37:25.105Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要<br>根据书中的目录,学习 shell 之前先了解什么是 linux 系统和 linux 系统的基本使用<br>本篇文章主要是关于 linux 的文件系统的基础介绍和 shell 初了解</p></blockquote><span id="more"></span><h2 id="linux-文件系统基础介绍"><a href="#linux-文件系统基础介绍" class="headerlink" title="linux 文件系统基础介绍"></a>linux 文件系统基础介绍</h2><blockquote><p>在 linux 系统中,一切都可以用文件来表示,所以了解 linux 文件系统还是很重要的<br>常见的文件系统:</p><ul><li>fat 系列</li><li>ntfs</li><li>ext 系列</li></ul><p>我的 debian 系统就是 ext4 格式的<br>这是一种日志文件系统<br>使用该文件系统保存时,除了保存内容之外<br>还有相关内容的属性和权限之类的<br>在 linux 系统中,一般使用结点(inode)的方式存储文件</p><p>题外话</p><blockquote><p>磁盘中的最小存储单元是扇区,每个扇区有 512 个字节,<br>因为扇区特别多,不利于文件内容的存储,<br>因此在 linux 系统中,实际上是按照<code>块</code>的方式进行存储的,<br>一般来说一个<code>块</code>由 8 个<code>扇区</code>构成,在块中,存储着文件的相关信息<br>这些存储文件基本信息的区域称为<code>inode</code>,即索引结点</p></blockquote><p>索引结点(inode)的内容</p><ul><li>文件的大小</li><li>文件的创建者,使用 ID 表示</li><li>文件的所属组</li><li>文件的读写执行权限</li><li>文件的时间属性</li><li>链接数</li><li>文件中数据 block 的位置</li></ul><p>每个 inode 的大小一般为 128 字节或 256 字节<br>可以使用 <code>stat</code> 命令查看结点信息<br>举例</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">zpf@debian:~/Desktop/Blog$ <span class="built_in">stat</span> public/</span><br><span class="line">  文件：public/</span><br><span class="line">  大小：4096            块：8          IO 块：4096   目录</span><br><span class="line">设备：812h/2066d        Inode：1048607     硬链接：19</span><br><span class="line">权限：(0755/drwxr-xr-x)  Uid：( 1000/     zpf)   Gid：( 1000/     zpf)</span><br><span class="line">最近访问：2021-04-21 21:03:48.431319597 +0800</span><br><span class="line">最近更改：2021-04-21 21:03:48.423319545 +0800</span><br><span class="line">最近改动：2021-04-21 21:03:48.423319545 +0800</span><br><span class="line">创建时间：2021-04-21 21:03:45.435300083 +0800</span><br></pre></td></tr></table></figure><h2 id="linux-系统文件结构"><a href="#linux-系统文件结构" class="headerlink" title="linux 系统文件结构"></a>linux 系统文件结构</h2><blockquote><p>linux 使用的是树型结构存储文件的<br>linux 系统的根目录是用<code>/</code>表示</p><table><thead><tr><th>目录名称</th><th>作用</th></tr></thead><tbody><tr><td>/</td><td>系统的根目录,包含系统中其他的所有文件</td></tr><tr><td>root</td><td>root 用户的主目录</td></tr><tr><td>home</td><td>存放普通用户的相关文件</td></tr><tr><td>bin</td><td>存放常用命令的目录,如 ls</td></tr><tr><td>sbin</td><td>要具有一定权限才可以使用命令</td></tr><tr><td>proc</td><td>这个目录是一个虚拟的目录，它是系统内存的映射，访问这个目录来获取系统信息</td></tr><tr><td>usr</td><td>安装一个软件的默认目录</td></tr><tr><td>boot</td><td>存放引导系统启动的相关文件</td></tr><tr><td>lib</td><td>库文件 静态库/动态库/内核模块文件</td></tr><tr><td>etc</td><td>存放配置的相关文件,像 apt 配置文件(/etc/apt/source.list)</td></tr><tr><td>var</td><td>存放经常变化的文件，如网络连接的 sock 文件 、日志</td></tr><tr><td>mnt</td><td>默认挂载光驱和软驱的目录,可挂载其他设备(需提前创建文件夹)</td></tr><tr><td>tmp</td><td>这个目录是用来存放一些临时文件的</td></tr><tr><td>opt</td><td>可选目录，第三方程序的安装目录</td></tr></tbody></table><p>我们通常用到的目录<br>home/usr/var/etc/等等</p></blockquote><h2 id="走进-shell"><a href="#走进-shell" class="headerlink" title="走进 shell"></a>走进 shell</h2><blockquote><p>shell 的中文意思是’贝壳’<br>在 linux 中的意思’贝壳’保护内核<br>内核通常是脆弱的,shell 是可以直接和内核交互的<br>用户通过 shell 与内核交互</p><hr><p>本质上 shell 是个命令解释器,把用户的请求解释为内核能处理的内容<br>因此 shell 对 linux 是十分重要的,学习 shell 也是十分有必要的<br>在 shell 中也是有着十分复杂的语法的,像选择,循环,判断等等<br>Shell 也是有着很多种类的,linux 默认的 shell 是 bash<br><code>echo $SHELL</code>查看 shell 类型<br>debian 就是使用的 bash</p><hr><p>shell 就是命令行的操作,写在文件中,通过 bash 进行解释运行<br>注释: 使用<code>#</code>进行单行注释<br>符号<code>#!</code>的使用,这个是告诉要使用那种 shell 终端使用那个 shell 执行该脚本<br><code>#! /bin/bash</code><br>执行 shell 脚本需要将脚本赋予执行权限<br><code>chmod u+x filename</code><br>终端执行 shell 脚本</p><ul><li><code>./filename</code></li><li><code>shell名称 脚本名称</code></li></ul></blockquote><blockquote><p>上面的内容差不多就是书中前两章的内容<br>因为我有了一定的基础,就看的比较快,也能理解书中的内容</p></blockquote><h1 id="希望能对你有所帮助-p-o"><a href="#希望能对你有所帮助-p-o" class="headerlink" title="希望能对你有所帮助(p_o)"></a>希望能对你有所帮助(p_o)</h1>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;摘要&lt;br&gt;根据书中的目录,学习 shell 之前先了解什么是 linux 系统和 linux 系统的基本使用&lt;br&gt;本篇文章主要是关于 linux 的文件系统的基础介绍和 shell 初了解&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="linux" scheme="https://zhangpf2000.github.io/categories/linux/"/>
    
      <category term="Bash" scheme="https://zhangpf2000.github.io/categories/linux/Bash/"/>
    
    
      <category term="Bash" scheme="https://zhangpf2000.github.io/tags/Bash/"/>
    
  </entry>
  
  <entry>
    <title>Linux_Bash_学习之路</title>
    <link href="https://zhangpf2000.github.io/2021/04/21/Linux_Bash/Linux_Bash_%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF.html/"/>
    <id>https://zhangpf2000.github.io/2021/04/21/Linux_Bash/Linux_Bash_%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF.html/</id>
    <published>2021-04-21T12:37:29.000Z</published>
    <updated>2021-04-22T10:37:19.161Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>现在开始一系列新的文章<br>用于记录我学习 linux_Bash 的过程<br>学习 linux Bash 脚本是为了更好的了解 linux 和方便日常的操作<br>自动化的使用脚本能够节省更多的时间去做事情<br>举例: 我写博客使用的是 hexo,可以创建两个脚本文件<code>s.sh</code>和<code>d.sh</code><br>用于预览博客和推送博客到 github 上<br>使用的时候就直接运行脚本即可</p><hr><p>Bash 脚本构成中全是 linux 中的命令<br>在学习过程中能更好的学习 linxu 命令<br>我借用了学校图书馆中的书来辅助我的学习<br>书籍信息:</p><ul><li>书名: Linux Bash 编程与脚本应用实战</li><li>ISBN: 978-7-302-38446-5</li><li>封面:</li><li><img src="http://image12.bookschina.com/2015/20150218/6764488.jpg" alt="图书封面"></li></ul></blockquote><span id="more"></span><blockquote><p>目前这本书我已经看了一半了<br>还可以,难度也不是太大<br>但是在学习的过程中,发现书里面的命令在我的电脑上的结果和书中的不一样<br>书的前面介绍了很多 linux 的基础知识,很不错<br>有好些知识是我还没了解过的,看完前面的对后面的脚本编写有很大的好处<br>这几天把这本书的内容学学,并且通过 blog 的方式记录下来<br>我估计这本书很快就可以学完了,<br>学完之后再学学其他借的基本书:<br><code>Linux从入门到精通</code>和<code>Linux操作系统</code>(感觉还不错的样子)</p><p>书的目录<br>第 01 章: 学习 Shell 的背景知识—linux 系统<br>第 02 章: 迈出 Shell 脚本编程第一步<br>第 03 章: Shell 常用命令大演练<br>第 04 章: Shell 脚本中的变量<br>第 05 章: Shell 脚本中的特殊符号<br>第 06 章: Linux 中的文件处理<br>第 07 章: Shell 脚本中的分支结构<br>第 08 章: Shell 中的循环结构<br>第 09 章: Shell 中的函数<br>第 10 章: Shell 脚本编写技巧<br>第 11 章: 正则表达式<br>第 12 章: Shell 中的文本搜索工具—grep 家族<br>第 13 章: sed 编程<br>第 14 章: gawk 编程<br>第 15 章: 脚本控制<br>第 16 章: 脚本运行的优化<br>第 17 章: Shell 实战之系统管理<br>第 18 章: Shell 实战之数据库操作</p></blockquote><blockquote><p>该书是使用的 ubuntu 系统,整体来说,区别不是太大</p></blockquote><h1 id="希望能对你有所帮助-p-o"><a href="#希望能对你有所帮助-p-o" class="headerlink" title="希望能对你有所帮助(p_o)"></a>希望能对你有所帮助(p_o)</h1>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;h1 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h1&gt;&lt;p&gt;现在开始一系列新的文章&lt;br&gt;用于记录我学习 linux_Bash 的过程&lt;br&gt;学习 linux Bash 脚本是为了更好的了解 linux 和方便日常的操作&lt;br&gt;自动化的使用脚本能够节省更多的时间去做事情&lt;br&gt;举例: 我写博客使用的是 hexo,可以创建两个脚本文件&lt;code&gt;s.sh&lt;/code&gt;和&lt;code&gt;d.sh&lt;/code&gt;&lt;br&gt;用于预览博客和推送博客到 github 上&lt;br&gt;使用的时候就直接运行脚本即可&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Bash 脚本构成中全是 linux 中的命令&lt;br&gt;在学习过程中能更好的学习 linxu 命令&lt;br&gt;我借用了学校图书馆中的书来辅助我的学习&lt;br&gt;书籍信息:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;书名: Linux Bash 编程与脚本应用实战&lt;/li&gt;
&lt;li&gt;ISBN: 978-7-302-38446-5&lt;/li&gt;
&lt;li&gt;封面:&lt;/li&gt;
&lt;li&gt;&lt;img src=&quot;http://image12.bookschina.com/2015/20150218/6764488.jpg&quot; alt=&quot;图书封面&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="linux" scheme="https://zhangpf2000.github.io/categories/linux/"/>
    
      <category term="Bash" scheme="https://zhangpf2000.github.io/categories/linux/Bash/"/>
    
    
      <category term="Bash" scheme="https://zhangpf2000.github.io/tags/Bash/"/>
    
  </entry>
  
  <entry>
    <title>debian10安装fcitx5</title>
    <link href="https://zhangpf2000.github.io/2021/04/14/debian10%E5%AE%89%E8%A3%85fcitx5.html/"/>
    <id>https://zhangpf2000.github.io/2021/04/14/debian10%E5%AE%89%E8%A3%85fcitx5.html/</id>
    <published>2021-04-14T07:23:25.000Z</published>
    <updated>2021-04-14T08:22:09.852Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>我把我的 debian10.8 系统的输入法换成了 fcitx5<br>原因:</p><ul><li>fcitx4 的这个输入法不是很友好</li><li>fcitx4 不够智能的显示</li><li>我安装了 fcitx5 之后试了试,发现效果不错</li><li>更加的智能化,好多词汇都可以直接出现</li><li>而 fcitx4 中的词汇通常是固定位置,这个就比较难受了</li><li>fcitx5 的词库导入也是十分的方便,不用再去转换文件格式了</li><li>fcitx5 的皮肤更加的舒服,我再 github 上找到了我很喜欢的一个皮肤</li></ul></blockquote><span id="more"></span><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><ul><li><p>卸载 fcitx4</p><ul><li><code>sudo apt remove --purge fcitx*</code></li><li><code>sudo apt remove --purge *fcitx*</code></li><li><code>sudo apt autoremove</code></li><li>卸载的时候最好退出 fcitx4</li></ul></li><li><p>安装 fcitx5</p><ul><li><code>sudo apt install --install-recommends fcitx5 fcitx5-chinese-addons --fix-missing</code></li><li><code>sudo apt install --no-install-recommends fcitx5 fcitx5-chinese-addons fcitx5-frontend-gtk3 fcitx5-frontend-qt5 fcitx5-module-xorg kde-config-fcitx5 im-config</code></li></ul></li><li><p>配置 fcitx5</p><ul><li>安装完成之后就可以打开 fcitx5</li><li>默认安装完成之后,只有一堆没有的设置,需要自行设置</li><li>debian 不需要配置一些文件,修改主题输入法等相关操作都可以图形化完成</li><li><img src="https://cdn.jsdelivr.net/gh/ZhangPF2000/Image@main/img/2021-04-14_15-48-28.png" alt=""></li><li><img src="https://cdn.jsdelivr.net/gh/ZhangPF2000/Image@main/img/2021-04-14_15-42-24.png" alt=""></li><li><img src="https://cdn.jsdelivr.net/gh/ZhangPF2000/Image@main/img/2021-04-14_15-47-20.png" alt=""></li></ul></li><li><p>主题演示:</p><ul><li><p>主题文件夹可以放在<code>~/.local/share/fcitx5/themes/</code>下</p></li><li><p>Alpha-white-2.0<br><img src="https://cdn.jsdelivr.net/gh/sxqsfun/fcitx5-sogou-themes@master/Alpha-black-2.0/h.png" alt="Alpha-black-2.0"></p></li><li><p>Alpha-black<br><img src="https://cdn.jsdelivr.net/gh/sxqsfun/fcitx5-sogou-themes@master/Alpha-black/h.png" alt="Alpha-black"></p></li><li><p>Alpha-white-2.0<br><img src="https://cdn.jsdelivr.net/gh/sxqsfun/fcitx5-sogou-themes@master/Alpha-white-2.0/h.png" alt="Alpha-white-2.0"></p></li><li><p>Alpha-white<br><img src="https://cdn.jsdelivr.net/gh/sxqsfun/fcitx5-sogou-themes@master/Alpha-white/h.png" alt="Alpha-white"></p></li><li><p>【安然】简单白（默认皮肤圆角纯白版）<br><img src="https://cdn.jsdelivr.net/gh/sxqsfun/fcitx5-sogou-themes@master/%E3%80%90%E5%AE%89%E7%84%B6%E3%80%91%E7%AE%80%E5%8D%95%E7%99%BD%EF%BC%88%E9%BB%98%E8%AE%A4%E7%9A%AE%E8%82%A4%E5%9C%86%E8%A7%92%E7%BA%AF%E7%99%BD%E7%89%88%EF%BC%89/h.png" alt="【安然】简单白（默认皮肤圆角纯白版）"></p></li><li><p>【竹子】极简花青<br><img src="https://cdn.jsdelivr.net/gh/sxqsfun/fcitx5-sogou-themes@master/%E3%80%90%E7%AB%B9%E5%AD%90%E3%80%91%E6%9E%81%E7%AE%80%E8%8A%B1%E9%9D%92/h.png" alt="【竹子】极简花青"></p></li><li><p>倬彼昊天·格子<br><img src="https://cdn.jsdelivr.net/gh/sxqsfun/fcitx5-sogou-themes@master/%E5%80%AC%E5%BD%BC%E6%98%8A%E5%A4%A9%C2%B7%E6%A0%BC%E5%AD%90/h.png" alt="倬彼昊天·格子"></p></li><li><p>倬彼昊天·灰色 MAC<br><img src="https://cdn.jsdelivr.net/gh/sxqsfun/fcitx5-sogou-themes@master/%E5%80%AC%E5%BD%BC%E6%98%8A%E5%A4%A9%C2%B7%E7%81%B0%E8%89%B2MAC/h.png" alt="倬彼昊天·灰色MAC"></p></li><li><p>珍珠白<br><img src="https://cdn.jsdelivr.net/gh/sxqsfun/fcitx5-sogou-themes@master/%E7%8F%8D%E7%8F%A0%E7%99%BD/h.png" alt="珍珠白"></p></li><li><p>白色卡片<br><img src="https://cdn.jsdelivr.net/gh/sxqsfun/fcitx5-sogou-themes@master/%E7%99%BD%E8%89%B2%E5%8D%A1%E7%89%87/h.png" alt="白色卡片"></p></li><li><p>珍珠白（无阴影版）<br><img src="https://cdn.jsdelivr.net/gh/sxqsfun/fcitx5-sogou-themes@master/%E7%8F%8D%E7%8F%A0%E7%99%BD%EF%BC%88%E6%97%A0%E9%98%B4%E5%BD%B1%E7%89%88%EF%BC%89/h.png" alt="珍珠白（无阴影版）"></p></li><li><p>简约白<br><img src="https://cdn.jsdelivr.net/gh/sxqsfun/fcitx5-sogou-themes@master/%E7%AE%80%E7%BA%A6%E7%99%BD/h.png" alt="简约白"></p></li></ul></li></ul><p>参考文章:<br><a href="https://wiki.archlinux.org/index.php/fcitx5_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">Fcitx5 (简体中文)</a><br><a href="https://wiki.debian.org/I18n/Fcitx5">I18n Fcitx5</a><br><a href="https://plumz.me/archives/11740/">如何现在就在 Ubuntu 20.04 用上 Fcitx 5</a><br><a href="https://github.com/sxqsfun/fcitx5-sogou-themes">fcitx5 的搜狗主题下载</a></p><h1 id="希望能对你有所帮助-p-o"><a href="#希望能对你有所帮助-p-o" class="headerlink" title="希望能对你有所帮助(p_o)"></a>希望能对你有所帮助(p_o)</h1>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;h1 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h1&gt;&lt;p&gt;我把我的 debian10.8 系统的输入法换成了 fcitx5&lt;br&gt;原因:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;fcitx4 的这个输入法不是很友好&lt;/li&gt;
&lt;li&gt;fcitx4 不够智能的显示&lt;/li&gt;
&lt;li&gt;我安装了 fcitx5 之后试了试,发现效果不错&lt;/li&gt;
&lt;li&gt;更加的智能化,好多词汇都可以直接出现&lt;/li&gt;
&lt;li&gt;而 fcitx4 中的词汇通常是固定位置,这个就比较难受了&lt;/li&gt;
&lt;li&gt;fcitx5 的词库导入也是十分的方便,不用再去转换文件格式了&lt;/li&gt;
&lt;li&gt;fcitx5 的皮肤更加的舒服,我再 github 上找到了我很喜欢的一个皮肤&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="linux" scheme="https://zhangpf2000.github.io/categories/linux/"/>
    
      <category term="fcitx" scheme="https://zhangpf2000.github.io/categories/linux/fcitx/"/>
    
    
      <category term="fcitx5" scheme="https://zhangpf2000.github.io/tags/fcitx5/"/>
    
  </entry>
  
  <entry>
    <title>fcitx使用搜狗皮肤</title>
    <link href="https://zhangpf2000.github.io/2021/04/11/fcitx%E4%BD%BF%E7%94%A8%E6%90%9C%E7%8B%97%E7%9A%AE%E8%82%A4.html/"/>
    <id>https://zhangpf2000.github.io/2021/04/11/fcitx%E4%BD%BF%E7%94%A8%E6%90%9C%E7%8B%97%E7%9A%AE%E8%82%A4.html/</id>
    <published>2021-04-11T03:47:09.000Z</published>
    <updated>2021-04-14T08:22:41.396Z</updated>
    
    <content type="html"><![CDATA[<h1 id="如果你需要-fcitx5-请看后面的文章"><a href="#如果你需要-fcitx5-请看后面的文章" class="headerlink" title="如果你需要 fcitx5,请看后面的文章"></a>如果你需要 fcitx5,请看后面的文章</h1><h1 id="我升级了输入法-fcitx5-的效果要更好-我推荐使用-fcitx5"><a href="#我升级了输入法-fcitx5-的效果要更好-我推荐使用-fcitx5" class="headerlink" title="我升级了输入法,fcitx5 的效果要更好,我推荐使用 fcitx5"></a>我升级了输入法,fcitx5 的效果要更好,我推荐使用 fcitx5</h1><h1 id="链接"><a href="#链接" class="headerlink" title="链接"></a><a href="https://zhangpf2000.github.io/2021/04/14/debian10%E5%AE%89%E8%A3%85fcitx5/">链接</a></h1><hr><blockquote><h1 id="fcitx-使用搜狗皮肤"><a href="#fcitx-使用搜狗皮肤" class="headerlink" title="fcitx 使用搜狗皮肤"></a>fcitx 使用搜狗皮肤</h1></blockquote><span id="more"></span><blockquote><p>前往<code>https://github.com/jorhelp/Fcitx_Skin</code>下载脚本文件<br><code>git clone https://github.com/jorhelp/Fcitx_Skin</code><br><code>cd Fcitx_Skin</code><br>去<code>https://pinyin.sogou.com/skins/</code>下载皮肤到<code>Fcitx_Skin</code>文件夹下<br><code>./ssf2fcitx.py xxx.ssf</code><br>将生成的文件夹放到<code>~/.config/fcitx/skin</code>下,重启 fcitx 选择皮肤即可<br>如果使用的时候有部分偏差,请自行修改生成的<code>fcitx_skin.conf</code>或<code>skin.ini</code>等文件</p></blockquote><p>参考文章:<br><a href="https://github.com/jorhelp/Fcitx_Skin">脚本链接</a></p><h1 id="希望能对你有所帮助-p-o"><a href="#希望能对你有所帮助-p-o" class="headerlink" title="希望能对你有所帮助(p_o)"></a>希望能对你有所帮助(p_o)</h1>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;如果你需要-fcitx5-请看后面的文章&quot;&gt;&lt;a href=&quot;#如果你需要-fcitx5-请看后面的文章&quot; class=&quot;headerlink&quot; title=&quot;如果你需要 fcitx5,请看后面的文章&quot;&gt;&lt;/a&gt;如果你需要 fcitx5,请看后面的文章&lt;/h1&gt;&lt;h1 id=&quot;我升级了输入法-fcitx5-的效果要更好-我推荐使用-fcitx5&quot;&gt;&lt;a href=&quot;#我升级了输入法-fcitx5-的效果要更好-我推荐使用-fcitx5&quot; class=&quot;headerlink&quot; title=&quot;我升级了输入法,fcitx5 的效果要更好,我推荐使用 fcitx5&quot;&gt;&lt;/a&gt;我升级了输入法,fcitx5 的效果要更好,我推荐使用 fcitx5&lt;/h1&gt;&lt;h1 id=&quot;链接&quot;&gt;&lt;a href=&quot;#链接&quot; class=&quot;headerlink&quot; title=&quot;链接&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://zhangpf2000.github.io/2021/04/14/debian10%E5%AE%89%E8%A3%85fcitx5/&quot;&gt;链接&lt;/a&gt;&lt;/h1&gt;&lt;hr&gt;
&lt;blockquote&gt;
&lt;h1 id=&quot;fcitx-使用搜狗皮肤&quot;&gt;&lt;a href=&quot;#fcitx-使用搜狗皮肤&quot; class=&quot;headerlink&quot; title=&quot;fcitx 使用搜狗皮肤&quot;&gt;&lt;/a&gt;fcitx 使用搜狗皮肤&lt;/h1&gt;&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="linux" scheme="https://zhangpf2000.github.io/categories/linux/"/>
    
      <category term="fcitx" scheme="https://zhangpf2000.github.io/categories/linux/fcitx/"/>
    
    
      <category term="fcitx" scheme="https://zhangpf2000.github.io/tags/fcitx/"/>
    
  </entry>
  
  <entry>
    <title>fcitx使用搜狗词库</title>
    <link href="https://zhangpf2000.github.io/2021/04/11/fcitx%E4%BD%BF%E7%94%A8%E6%90%9C%E7%8B%97%E8%AF%8D%E5%BA%93.html/"/>
    <id>https://zhangpf2000.github.io/2021/04/11/fcitx%E4%BD%BF%E7%94%A8%E6%90%9C%E7%8B%97%E8%AF%8D%E5%BA%93.html/</id>
    <published>2021-04-11T03:23:28.000Z</published>
    <updated>2021-04-14T08:01:54.379Z</updated>
    
    <content type="html"><![CDATA[<h1 id="如果你需要-fcitx5-请看后面的文章"><a href="#如果你需要-fcitx5-请看后面的文章" class="headerlink" title="如果你需要 fcitx5,请看后面的文章"></a>如果你需要 fcitx5,请看后面的文章</h1><h1 id="我升级了输入法-fcitx5-的效果要更好-我推荐使用-fcitx5"><a href="#我升级了输入法-fcitx5-的效果要更好-我推荐使用-fcitx5" class="headerlink" title="我升级了输入法,fcitx5 的效果要更好,我推荐使用 fcitx5"></a>我升级了输入法,fcitx5 的效果要更好,我推荐使用 fcitx5</h1><h1 id="链接"><a href="#链接" class="headerlink" title="链接"></a><a href="https://zhangpf2000.github.io/2021/04/14/debian10%E5%AE%89%E8%A3%85fcitx5/">链接</a></h1><hr><blockquote><h1 id="fcitx-使用搜狗词库"><a href="#fcitx-使用搜狗词库" class="headerlink" title="fcitx 使用搜狗词库"></a>fcitx 使用搜狗词库</h1><hr><p>简介: 在使用 debian 的时候,我是使用的 fcitx 框架+google 输入法<br>但是这个 fcitx 不是特别的好用,输入的时候没有在 win10 输入法的那种舒服感<br>至于词库,在输入的时候,不是特别的好用,今天无意间看到 fcitx 可以使用搜狗的词库<br>就试了试,下面是我的操作步骤</p></blockquote><p><a href="#手动配置">手动设置</a> &amp;&amp; <a href="#自动配置">自动配置</a></p><span id="more"></span><h2 id="手动配置"><a href="#手动配置" class="headerlink" title="手动配置"></a>手动配置</h2><ul><li>下载<a href="https://pinyin.sogou.com/dict/">搜狗词库文件</a>,下载的文件格式是<code>*.scel</code></li><li>这个格式的文件 fcitx 是无法使用的,fcitx 的词库文件是<code>*.mb</code>文件</li><li>将<code>scel</code>转换为<code>mb</code>格式<ul><li><code>sudo apt install fcitx-tools</code> 这是转换工具</li><li><code>scel2org xxx.scel -o xxx.org</code> 转换成 org 文件, org 文件是可以查看的</li><li><code>cat *.org &gt; tot.org</code> 合并转换的 org 文件,</li><li>下载下面的两个文件<code>gbkpy.org</code>和<code>pyPhrase.org</code></li><li><code>https://raw.githubusercontent.com/LuoshuiTianyi/Varia/master/gbkpy.org</code></li><li><code>https://raw.githubusercontent.com/LuoshuiTianyi/Varia/master/pyPhrase.org</code></li><li><code>cat pyPhrase.org &gt;&gt; tot.org</code> 词汇合并</li><li><code>sort tot.org &gt; ord.org</code> 排序</li><li><code>uniq ord.org &gt; final.org</code> 去重复</li><li><code>createPYMB gbkpy.org final.org</code> 生成 mb 文件</li><li><code>cp *.mb ~/.config/fcitx/googlepinyin</code> 将生成的 mb 文件复制到配置文件下</li><li>重启 fcitx 即可</li></ul></li><li><a href="https://github.com/Ingram7/SogouWordSpider/tree/master/SogouWordSpider">批量下载搜狗词库的爬虫</a></li></ul><h2 id="自动配置"><a href="#自动配置" class="headerlink" title="自动配置"></a>自动配置</h2><blockquote><p><a href="https://download.zsxwz.com/dir/16220046-40179353-fd1d9a?40183169">下载地址</a><br>下载现成的文件也可以,上面的下载后也是两个<code>mb文件</code>,<br>将这两个文件放到<code>~/.config/fcitx/googlepinyin</code>下重启即可<br>这两个文件,应该是整合了很多的词库的,可以使用的</p></blockquote><p>参考文章:<br><a href="https://www.cnblogs.com/luoshuitianyi/p/11669619.html">Fcitx 使用搜狗词库与皮肤</a></p><h1 id="希望能对你有所帮助-p-o"><a href="#希望能对你有所帮助-p-o" class="headerlink" title="希望能对你有所帮助(p_o)"></a>希望能对你有所帮助(p_o)</h1>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;如果你需要-fcitx5-请看后面的文章&quot;&gt;&lt;a href=&quot;#如果你需要-fcitx5-请看后面的文章&quot; class=&quot;headerlink&quot; title=&quot;如果你需要 fcitx5,请看后面的文章&quot;&gt;&lt;/a&gt;如果你需要 fcitx5,请看后面的文章&lt;/h1&gt;&lt;h1 id=&quot;我升级了输入法-fcitx5-的效果要更好-我推荐使用-fcitx5&quot;&gt;&lt;a href=&quot;#我升级了输入法-fcitx5-的效果要更好-我推荐使用-fcitx5&quot; class=&quot;headerlink&quot; title=&quot;我升级了输入法,fcitx5 的效果要更好,我推荐使用 fcitx5&quot;&gt;&lt;/a&gt;我升级了输入法,fcitx5 的效果要更好,我推荐使用 fcitx5&lt;/h1&gt;&lt;h1 id=&quot;链接&quot;&gt;&lt;a href=&quot;#链接&quot; class=&quot;headerlink&quot; title=&quot;链接&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://zhangpf2000.github.io/2021/04/14/debian10%E5%AE%89%E8%A3%85fcitx5/&quot;&gt;链接&lt;/a&gt;&lt;/h1&gt;&lt;hr&gt;
&lt;blockquote&gt;
&lt;h1 id=&quot;fcitx-使用搜狗词库&quot;&gt;&lt;a href=&quot;#fcitx-使用搜狗词库&quot; class=&quot;headerlink&quot; title=&quot;fcitx 使用搜狗词库&quot;&gt;&lt;/a&gt;fcitx 使用搜狗词库&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;简介: 在使用 debian 的时候,我是使用的 fcitx 框架+google 输入法&lt;br&gt;但是这个 fcitx 不是特别的好用,输入的时候没有在 win10 输入法的那种舒服感&lt;br&gt;至于词库,在输入的时候,不是特别的好用,今天无意间看到 fcitx 可以使用搜狗的词库&lt;br&gt;就试了试,下面是我的操作步骤&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;#手动配置&quot;&gt;手动设置&lt;/a&gt; &amp;amp;&amp;amp; &lt;a href=&quot;#自动配置&quot;&gt;自动配置&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="linux" scheme="https://zhangpf2000.github.io/categories/linux/"/>
    
      <category term="fcitx" scheme="https://zhangpf2000.github.io/categories/linux/fcitx/"/>
    
    
      <category term="fcitx" scheme="https://zhangpf2000.github.io/tags/fcitx/"/>
    
  </entry>
  
  <entry>
    <title>debian升级软件后黑屏解决</title>
    <link href="https://zhangpf2000.github.io/2021/04/03/debian%E5%8D%87%E7%BA%A7%E8%BD%AF%E4%BB%B6%E5%90%8E%E9%BB%91%E5%B1%8F%E8%A7%A3%E5%86%B3.html/"/>
    <id>https://zhangpf2000.github.io/2021/04/03/debian%E5%8D%87%E7%BA%A7%E8%BD%AF%E4%BB%B6%E5%90%8E%E9%BB%91%E5%B1%8F%E8%A7%A3%E5%86%B3.html/</id>
    <published>2021-04-03T12:58:30.000Z</published>
    <updated>2021-04-14T08:02:48.888Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h1 id="debian-大升级"><a href="#debian-大升级" class="headerlink" title="debian 大升级"></a>debian 大升级</h1><p>上篇文章中升级内核时,我的推荐是不要对其他软件包进行安装<br>防止出现黑屏,这个升级之后虽然能用,但是很不方便,所以当时我不推荐<br>今天在使用 debian 的时候要使用 libreoffice 进行操作,发现其版本太低<br>然后再次升级了软件包,发现还是黑屏<br>不过上网查阅后,并通过不断的测试,还是解决了这个问题</p><hr><p>升级</p><ul><li><code>deb https://mirrors.tuna.tsinghua.edu.cn/debian/ sid main contrib non-free</code></li><li><code>deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ sid main contrib non-free</code></li></ul><p>我测试时是使用的 sid 源(不是太安全),你们可以考虑<code>testing版</code>或<code>bullseye版</code><br><a href="https://mirrors.tuna.tsinghua.edu.cn/help/debian/">国内源地址</a><br>升级步骤</p><ul><li>换源</li><li><code>$ sudo apt update</code></li><li><code>$ sudo apt full-upgrade &amp;&amp; sudo apt upgrade</code></li><li><code>sudo reboot</code></li></ul><hr><p>重启之后就再打开就可以了<br>黑屏特点</p><ul><li>整个开机没有任何问题,也可以登录,就是登录之后桌面是黑的</li><li>鼠标左键右键都不能用,但是好像左右键一起按有用,会弹出菜单(没有啥用)</li><li>找不到桌面设置,不能更换壁纸,不能添加部件</li><li>快捷键<code>alt+空格</code>打开的<code>kruner</code>不能使用,一直打不开</li><li>快捷键<code>alt+f1</code>可以打开左下角的面板,可以从里面启动程序</li><li>使用里面的程序没有任何问题,只是桌面很难看,也不能修改</li><li>没有任务栏,我的电脑开机自动连接<code>wifi</code>和<code>pppoe</code>(没升级前设置的)</li><li>……</li></ul><hr><p>解决办法: 注意要联网</p><ul><li>打开终端<code>ctrl+alt+t</code>(我的快捷键)</li><li><code>$ sudo apt remove plasma-*</code></li><li><code>$ sudo apt remove *plasma-*</code></li><li><code>$ sudo apt autoremove</code></li><li><code>$ sudo apt install plasma-*</code></li><li><code>$ sudo reboot</code></li><li>我推测好像是升级的时候,plasma 的软件和设置出现了问题</li><li>导致 plasma 软件和设置不能其作用,导致桌面不能显示</li><li>按照上面的方法,重启之后,再登录就可以显示桌面了</li><li>当初还遇到一种情况:桌面可以设置壁纸(右上角有个小东西,点击可以设置桌面)</li><li>但是没有任务栏,默认面板也不能使用(原因估计和这个一样(没试过))</li><li>重启之后,一切基本都好了,剩下的再慢慢的配置下就好了,然后再备份下</li></ul><hr><p>升级后感觉如何</p><ul><li>升级完成之后发现这些配置是真的爽</li><li>更加方便的设置</li><li>更加完善的默认软件(设置有个护眼的很棒[debian 太亮了,不适应,还是暖色好])</li><li>更加好看的系统(主要都是在一些小地方,但是很实用的)</li><li>我升级的是 sid 版本,都是最新的,也不知道有没有啥大问题,但是目前感觉不错</li><li>软件的整体升级,这个就很舒服了,好多软件在稳定版上都是太老了,界面,功能都很少</li><li>我以前使用 kubuntu 的时候,用的也很舒服,那些都是自动设置的,不过 debian 是自行升级的</li><li>默认版本的还是太稳了,稳如老狗啊</li><li>想要 kubuntu 那种新版软件和新感觉的可以考虑升级一下</li></ul><hr><p>注意事项</p><ul><li>一定要备份,这个最为重要,失败了可以恢复,不然就玩了</li><li>一定要联网,下载 plasma 包的时候要用</li></ul></blockquote><span id="more"></span><h2 id="升级后图片"><a href="#升级后图片" class="headerlink" title="升级后图片"></a>升级后图片</h2><p><img src="https://cdn.jsdelivr.net/gh/ZhangPF2000/Image@main/img/20210403213234.png" alt="图片1"><br><img src="https://cdn.jsdelivr.net/gh/ZhangPF2000/Image@main/img/20210403213754.png" alt="图片2"><br><img src="https://cdn.jsdelivr.net/gh/ZhangPF2000/Image@main/img/20210403214834.png" alt="图片3"></p><h1 id="希望能对你有所帮助-p-o"><a href="#希望能对你有所帮助-p-o" class="headerlink" title="希望能对你有所帮助(p_o)"></a>希望能对你有所帮助(p_o)</h1>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;h1 id=&quot;debian-大升级&quot;&gt;&lt;a href=&quot;#debian-大升级&quot; class=&quot;headerlink&quot; title=&quot;debian 大升级&quot;&gt;&lt;/a&gt;debian 大升级&lt;/h1&gt;&lt;p&gt;上篇文章中升级内核时,我的推荐是不要对其他软件包进行安装&lt;br&gt;防止出现黑屏,这个升级之后虽然能用,但是很不方便,所以当时我不推荐&lt;br&gt;今天在使用 debian 的时候要使用 libreoffice 进行操作,发现其版本太低&lt;br&gt;然后再次升级了软件包,发现还是黑屏&lt;br&gt;不过上网查阅后,并通过不断的测试,还是解决了这个问题&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;升级&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;deb https://mirrors.tuna.tsinghua.edu.cn/debian/ sid main contrib non-free&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ sid main contrib non-free&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我测试时是使用的 sid 源(不是太安全),你们可以考虑&lt;code&gt;testing版&lt;/code&gt;或&lt;code&gt;bullseye版&lt;/code&gt;&lt;br&gt;&lt;a href=&quot;https://mirrors.tuna.tsinghua.edu.cn/help/debian/&quot;&gt;国内源地址&lt;/a&gt;&lt;br&gt;升级步骤&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;换源&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ sudo apt update&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ sudo apt full-upgrade &amp;amp;&amp;amp; sudo apt upgrade&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sudo reboot&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;重启之后就再打开就可以了&lt;br&gt;黑屏特点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;整个开机没有任何问题,也可以登录,就是登录之后桌面是黑的&lt;/li&gt;
&lt;li&gt;鼠标左键右键都不能用,但是好像左右键一起按有用,会弹出菜单(没有啥用)&lt;/li&gt;
&lt;li&gt;找不到桌面设置,不能更换壁纸,不能添加部件&lt;/li&gt;
&lt;li&gt;快捷键&lt;code&gt;alt+空格&lt;/code&gt;打开的&lt;code&gt;kruner&lt;/code&gt;不能使用,一直打不开&lt;/li&gt;
&lt;li&gt;快捷键&lt;code&gt;alt+f1&lt;/code&gt;可以打开左下角的面板,可以从里面启动程序&lt;/li&gt;
&lt;li&gt;使用里面的程序没有任何问题,只是桌面很难看,也不能修改&lt;/li&gt;
&lt;li&gt;没有任务栏,我的电脑开机自动连接&lt;code&gt;wifi&lt;/code&gt;和&lt;code&gt;pppoe&lt;/code&gt;(没升级前设置的)&lt;/li&gt;
&lt;li&gt;……&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;解决办法: 注意要联网&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;打开终端&lt;code&gt;ctrl+alt+t&lt;/code&gt;(我的快捷键)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ sudo apt remove plasma-*&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ sudo apt remove *plasma-*&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ sudo apt autoremove&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ sudo apt install plasma-*&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ sudo reboot&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;我推测好像是升级的时候,plasma 的软件和设置出现了问题&lt;/li&gt;
&lt;li&gt;导致 plasma 软件和设置不能其作用,导致桌面不能显示&lt;/li&gt;
&lt;li&gt;按照上面的方法,重启之后,再登录就可以显示桌面了&lt;/li&gt;
&lt;li&gt;当初还遇到一种情况:桌面可以设置壁纸(右上角有个小东西,点击可以设置桌面)&lt;/li&gt;
&lt;li&gt;但是没有任务栏,默认面板也不能使用(原因估计和这个一样(没试过))&lt;/li&gt;
&lt;li&gt;重启之后,一切基本都好了,剩下的再慢慢的配置下就好了,然后再备份下&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;升级后感觉如何&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;升级完成之后发现这些配置是真的爽&lt;/li&gt;
&lt;li&gt;更加方便的设置&lt;/li&gt;
&lt;li&gt;更加完善的默认软件(设置有个护眼的很棒[debian 太亮了,不适应,还是暖色好])&lt;/li&gt;
&lt;li&gt;更加好看的系统(主要都是在一些小地方,但是很实用的)&lt;/li&gt;
&lt;li&gt;我升级的是 sid 版本,都是最新的,也不知道有没有啥大问题,但是目前感觉不错&lt;/li&gt;
&lt;li&gt;软件的整体升级,这个就很舒服了,好多软件在稳定版上都是太老了,界面,功能都很少&lt;/li&gt;
&lt;li&gt;我以前使用 kubuntu 的时候,用的也很舒服,那些都是自动设置的,不过 debian 是自行升级的&lt;/li&gt;
&lt;li&gt;默认版本的还是太稳了,稳如老狗啊&lt;/li&gt;
&lt;li&gt;想要 kubuntu 那种新版软件和新感觉的可以考虑升级一下&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;注意事项&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一定要备份,这个最为重要,失败了可以恢复,不然就玩了&lt;/li&gt;
&lt;li&gt;一定要联网,下载 plasma 包的时候要用&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="linux" scheme="https://zhangpf2000.github.io/categories/linux/"/>
    
      <category term="bug" scheme="https://zhangpf2000.github.io/categories/linux/bug/"/>
    
    
      <category term="debian" scheme="https://zhangpf2000.github.io/tags/debian/"/>
    
      <category term="kde plasma" scheme="https://zhangpf2000.github.io/tags/kde-plasma/"/>
    
  </entry>
  
  <entry>
    <title>升级debian内核</title>
    <link href="https://zhangpf2000.github.io/2021/04/02/%E5%8D%87%E7%BA%A7debian%E5%86%85%E6%A0%B8.html/"/>
    <id>https://zhangpf2000.github.io/2021/04/02/%E5%8D%87%E7%BA%A7debian%E5%86%85%E6%A0%B8.html/</id>
    <published>2021-04-02T02:59:48.000Z</published>
    <updated>2021-04-03T13:57:18.342Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h1 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h1><p>debian10.8版本安装完成之后默认安装的是4.19内核,不过这个内核已经有点老了<br>还不支持一些的硬件:我的wifi网卡不能被识别到<br>上网查阅资料得知:要识别到网卡需要5.12的内核(cf-ax200无线网卡)<br>升级内核后安装驱动重启即可  </p></blockquote><span id="more"></span><h1 id="重要的事情说三遍"><a href="#重要的事情说三遍" class="headerlink" title="重要的事情说三遍"></a>重要的事情说三遍</h1><h2 id="备份数据-备份数据-备份数据"><a href="#备份数据-备份数据-备份数据" class="headerlink" title="备份数据 备份数据 备份数据"></a><strong>备份数据</strong> <strong>备份数据</strong> <strong>备份数据</strong></h2><hr><p>我使用的是timeshift软件进行备份<br>很简单的就可以完成对debian系统内所有文件的备份(注意硬盘容量)<br>我在升级内核的时候,遇到了好多次失败,所以备份是一个重要的良好的习惯  </p><hr><h2 id="升级内核"><a href="#升级内核" class="headerlink" title="升级内核"></a>升级内核</h2><hr><blockquote><p>首先<a href="#bullseye版">换源</a><br>其次<code>sudo apt update</code><br>不要使用<code>sudo apt upgrade</code><br>然后<code>sudo apt list --upgradable | grep &quot;linux-image&quot;</code>找到可升级的内核<br><code>sudo apt upgrade xxx</code>升级内核</p></blockquote><hr><blockquote><p>由于我的电脑是nvidia显卡,参考<a href="https://blog.csdn.net/qq_21595501/article/details/103705776">Debian 10.2命令安装Nvidia显卡驱动成功，问题回顾</a>之后就可以打开桌面了<br>但是在升级内核的时候遇到了些问题<br>大致就是升级内核之后,更新grub,以新内核进行启动<br>会无法加载nvidia模块之类的,总之就是无法打开桌面<br>经过我的测试发现,按照上面的教程确实可以解决nvidia的显卡问题,<br>但是升级内核之后这些配置就成了阻碍打开桌面的原因了  </p><ul><li>解决办法</li><li>sudo apt remove –purge nvidia*</li><li>sudo apt remove –purge *nvidia*</li><li>sudo apt autoremove</li><li>上面的设置是去除所有的nvidia设置和包</li><li>sudo rm /etc/X11/xorg.conf</li><li>sudo rm /usr/local/bin/switch_nvidia.sh</li><li>打开<code>/usr/share/sddm/scripts/Xsetup</code> 去除<code>/usr/local/bin/switch_nvidia.sh</code>这一行</li><li>我的是sddm,这些是修改内核加载模块顺序(我猜的)</li><li>上面的完成之后重启应该就可以以新内核打开桌面了</li><li>注意: 我一直使用的都是默认开源内核nouveau, 不需要禁用  </li></ul><p>重启之后进入桌面链接网络(我的pppoe拨号)<br>总之联网然后sudo apt update &amp;&amp; sudo apt upgrade更新一下<br><a href="#bullseye版">换源bullseye版本</a><br>然后安装<code>firmware-iwlwifi模块</code>(使用<code>bullseye版</code>源更新)重启后就可以看到wifi了<br><code>sudo apt update &amp;&amp; sudo apt install firmware-iwlwifi</code><br>firmware-iwlwifi这个模块的稳定版中版本有点低不能用,所以要换源<br><del>提醒:不要随便升级包,我把我的源换成了sid(unable:不可靠的)后更新</del>(已解决)<br><del>发现能进入桌面,但是好多的设置都变了,桌面没了,任务栏没了,我也设置不好</del><br><del>所以我又换成了以前的源(稳定版),必要的时候使用其他源</del><br><del>总之就是不要随便更新源尤其是不稳定的源(如果要更新,请提前备份数据)</del><br>上面划线的已解决,<a href="https://zhangpf2000.github.io/2021/04/03/debian%E5%8D%87%E7%BA%A7%E8%BD%AF%E4%BB%B6%E5%90%8E%E9%BB%91%E5%B1%8F%E8%A7%A3%E5%86%B3/">请看下一篇文章</a><br>防止出现问题后无法恢复导致只能重新安装  </p><p>==================================================================<br>升级内核后遇到的问题<br>升级之后,确实可以使用wifi了,桌面设置之类的也没有太大变化<br>不过我发现firefox和chrome不能输入中文了<br>大致就是在终端启动firefox之后,会显示加载xxx失败<br>还有个xx版本太老(我忘了.写博客的时候已经修改好了,我使用的备份,也没有我的搜索记录了)<br>这个的解决办法就是彻底卸载fcitx,然后再安装上<br>注意顺序是先安装firmware-iwlwifi再安装fcitx,不然会冲突<br>如果已经安装了fcitx就卸载  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">sudo apt remove --purge fcitx*</span><br><span class="line">sudo apt remove --purge *fcitx*</span><br><span class="line">sudo apt autoremove</span><br><span class="line"># 上面是卸载fcitx</span><br><span class="line">sudo apt install fcitx-frontend-gtk2 fcitx-frontend-gtk3 fcitx-ui-classic fcitx-ui-light</span><br><span class="line">sudo apt install fcitx-sunpinyin fcitx-googlepinyin</span><br><span class="line">sudo apt install fcitx-table*</span><br><span class="line">sudo apt install fcitx-frontend-qt4 fcitx-frontend-qt5</span><br><span class="line">sudo apt install kde-config-fcitx fcitx-module-cloudpinyin</span><br><span class="line"># 这些是安装fictx和一些配置(我找不到参考文档了)</span><br><span class="line"># 上面这些基本都是必备的</span><br><span class="line"># 最后一行的是安装kde中fcitx的配置文件,可以在设置中找到fcitx</span><br><span class="line"># fcitx-module-cloudpinyin是可以使用云拼音</span><br></pre></td></tr></table></figure></blockquote><h2 id="我的debian源"><a href="#我的debian源" class="headerlink" title="我的debian源"></a>我的debian源</h2><hr><h3 id="稳定版debian源"><a href="#稳定版debian源" class="headerlink" title="稳定版debian源"></a>稳定版debian源</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;debian&#x2F; buster main contrib non-free</span><br><span class="line">deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;debian&#x2F; buster main contrib non-free</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;debian&#x2F; buster-updates main contrib non-free</span><br><span class="line">deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;debian&#x2F; buster-updates main contrib non-free</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;debian&#x2F; buster-backports main contrib non-free</span><br><span class="line">deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;debian&#x2F; buster-backports main contrib non-free</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;debian-security buster&#x2F;updates main contrib non-free</span><br><span class="line">deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;debian-security buster&#x2F;updates main contrib non-free</span><br></pre></td></tr></table></figure><h3 id="bullseye版"><a href="#bullseye版" class="headerlink" title="bullseye版"></a>bullseye版</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 当buster版(稳定版)的源不支持你的软件时,可以考虑这个源</span><br><span class="line"># 这个还是比较常用的,毕竟debian的稳定版源有些软件太老了</span><br><span class="line"># 使用该源的时候,可以sudo apt update</span><br><span class="line"># 但是不要sudo apt upgrade,这会导致软件全部升级,可能会出现未知错误</span><br><span class="line"># 需要更新的时候请先sudo apt update</span><br><span class="line"># 然后sudo apt install xxx 或者 sudo apt upgrade xxx</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;debian&#x2F; bullseye main contrib non-free</span><br><span class="line">deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;debian&#x2F; bullseye main contrib non-free</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;debian&#x2F; bullseye-updates main contrib non-free</span><br><span class="line">deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;debian&#x2F; bullseye-updates main contrib non-free</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;debian&#x2F; bullseye-backports main contrib non-free</span><br><span class="line">deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;debian&#x2F; bullseye-backports main contrib non-free</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;debian-security bullseye-security main contrib non-free</span><br><span class="line">deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;debian-security bullseye-security main contrib non-free</span><br></pre></td></tr></table></figure><h3 id="testing版"><a href="#testing版" class="headerlink" title="testing版"></a>testing版</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 这个是测试版的源</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;debian&#x2F; testing main contrib non-free</span><br><span class="line">deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;debian&#x2F; testing main contrib non-free</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;debian&#x2F; testing-updates main contrib non-free</span><br><span class="line">deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;debian&#x2F; testing-updates main contrib non-free</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;debian&#x2F; testing-backports main contrib non-free</span><br><span class="line">deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;debian&#x2F; testing-backports main contrib non-free</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;debian-security testing-security main contrib non-free</span><br><span class="line">deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;debian-security testing-security main contrib non-free</span><br></pre></td></tr></table></figure><h3 id="sid-版"><a href="#sid-版" class="headerlink" title="sid 版"></a>sid 版</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 这个最不稳定不要随便用</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;debian&#x2F; sid main contrib non-free</span><br><span class="line">deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;debian&#x2F; sid main contrib non-free</span><br></pre></td></tr></table></figure><h1 id="希望能对你有所帮助-p-o"><a href="#希望能对你有所帮助-p-o" class="headerlink" title="希望能对你有所帮助(p_o)"></a>希望能对你有所帮助(p_o)</h1>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;h1 id=&quot;原因&quot;&gt;&lt;a href=&quot;#原因&quot; class=&quot;headerlink&quot; title=&quot;原因&quot;&gt;&lt;/a&gt;原因&lt;/h1&gt;&lt;p&gt;debian10.8版本安装完成之后默认安装的是4.19内核,不过这个内核已经有点老了&lt;br&gt;还不支持一些的硬件:我的wifi网卡不能被识别到&lt;br&gt;上网查阅资料得知:要识别到网卡需要5.12的内核(cf-ax200无线网卡)&lt;br&gt;升级内核后安装驱动重启即可  &lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="linux" scheme="https://zhangpf2000.github.io/categories/linux/"/>
    
    
      <category term="debian" scheme="https://zhangpf2000.github.io/tags/debian/"/>
    
      <category term="linux" scheme="https://zhangpf2000.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>前几天的意见烦心事</title>
    <link href="https://zhangpf2000.github.io/2021/04/01/%E5%89%8D%E5%87%A0%E5%A4%A9%E7%9A%84%E6%84%8F%E8%A7%81%E7%83%A6%E5%BF%83%E4%BA%8B.html/"/>
    <id>https://zhangpf2000.github.io/2021/04/01/%E5%89%8D%E5%87%A0%E5%A4%A9%E7%9A%84%E6%84%8F%E8%A7%81%E7%83%A6%E5%BF%83%E4%BA%8B.html/</id>
    <published>2021-04-01T11:09:07.000Z</published>
    <updated>2021-04-01T11:57:05.428Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h1 id="生活琐事"><a href="#生活琐事" class="headerlink" title="生活琐事"></a>生活琐事</h1></blockquote><span id="more"></span><blockquote><p>前几天不小心在操作kubuntu的grub时不小心把引导文件删除了<br>之后在win10上恢复,结果不小心把kubuntu系统给删除掉了<br>其实只要打开vmware开启一个linux系统<br>插上u盘把分区挂载到linux上重建grub就可以了<br>可惜我是个菜鸟….<br>当我想到的时候,再挂载却发现什么文件都没了……….<br>伤心….<br>里面还有我的两篇blog呢(其中一篇我特用心,特别长)<br>后悔啊…….  </p><h1 id=""><a href="#" class="headerlink" title="============="></a>=============</h1><p>在此涨个记性,grub坏了,只要系统文件没坏,还是可以很轻松搞定的<br>不要再到win10上去使用乱七八糟的软件来打开分区进行恢复(我在kubuntu中备份了grub文件)<br>后面的事情………..<br>kubuntu失去了之后,我打算安装debian(我还是比较喜欢这个)<br>只不过当时安装debian之后,发现出现了些问题,在vmware可以打开桌面<br>插上电脑之后,引导打开之后发现无法进入桌面,当时太菜了,无法解决这个问题<br>查了一些文章发现,好像是nvidia显卡和debian默认驱动的问题<br>后来想着kubuntu也没了,再试试…<br>按照<a href="https://www.bilibili.com/video/BV14E411B7Ww">debian快速安装</a>来安装<br>按照<a href="https://blog.csdn.net/qq_21595501/article/details/103705776">Debian 10.2命令安装Nvidia显卡驱动成功，问题回顾</a>来进行修改</p><blockquote><p>注意事项:<br>我的debian是目前最新版debian10.8版本<br>我的电脑是使用的pppoe拨号进行连接上网的<br>u盘插上电脑启动之后无法进入桌面,也就无法联网(我推测没有桌面都不能上网)<br>我电脑上有个wifi网卡,但是debian也无法检测到(后续再说)<br>但是在vmware上是有桌面的,可以联网(上面的教程是要联网下载软件之类的)<br>上面的教程要反复进行在电脑和vmware上打开(查看一些电脑数据之类的)<br>debian10.8版本的系统内核版本好像是4.19(稳定版本的)<br>但是这个版本有点老了(我后来更新到了5.10版本)  </p></blockquote><p>按照上面的教程基本就可以在电脑上打开u盘中的debian了<br>debian和kubuntu对比  </p><blockquote><p>debian更加的古老…….<br>我使用的还是kde但是感觉debian的更加舒服<br>debian的汉化会更好,好多都汉化了,kubuntu还有好多没汉化<br>debian更加的复杂些,我现在遇到了很多的问题<br>而这些问题基本上在kubuntu都解决了(驱动问题)<br>kubuntu的好多软件和内核都比较新<br>内核版本比debian高太多了<br>debian的4.19太低了,好多软件功能都没有,也没有kubuntu的好看<br>所以后来我升级到了5.10版本(这个过程也遇到了很多问题)<br>debian对于驱动问题有点大,4.19内核不支持我的wifi网卡ax200<br>这个只能升级内核版本才能解决<br>而kubuntu安装完成之后打开就都解决了,开机即可使用<br>不停的备份系统,不停的测试解决问题<br>这个过程还是很<code>享受</code>的,也学到了很多知识,我还是更喜欢这种动手琢磨的感觉吧<br>希望这个debian能成为我未来的主力电脑  </p></blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;h1 id=&quot;生活琐事&quot;&gt;&lt;a href=&quot;#生活琐事&quot; class=&quot;headerlink&quot; title=&quot;生活琐事&quot;&gt;&lt;/a&gt;生活琐事&lt;/h1&gt;&lt;/blockquote&gt;
    
    </summary>
    
    
    
      <category term="生活琐事" scheme="https://zhangpf2000.github.io/tags/%E7%94%9F%E6%B4%BB%E7%90%90%E4%BA%8B/"/>
    
  </entry>
  
  <entry>
    <title>hexo Github双分支</title>
    <link href="https://zhangpf2000.github.io/2021/03/16/hexo-Github%E5%8F%8C%E5%88%86%E6%94%AF.html/"/>
    <id>https://zhangpf2000.github.io/2021/03/16/hexo-Github%E5%8F%8C%E5%88%86%E6%94%AF.html/</id>
    <published>2021-03-16T08:24:45.000Z</published>
    <updated>2021-03-31T11:03:25.693Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘要</p></blockquote><hr><p>上一篇文章中,已经成功了搭建好了博客,也可以发布了,但是只能在当前操作系统进行发布,这个就不是很方便,尤其是我的操作系统还是一个U盘系统,多数情况下可能还是使用windows等,这个时候把我的hexo配置等存储在Github就很不错,而且hexo初始化的时候还有一个.gitignore文件就是为了这种情况考虑的.<br>而且github支持分支进行分别存储,这样就更加的方便了</p><hr><h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><ul><li><a href="#双分支">双分支</a><ul><li><a href="https://baijiahao.baidu.com/s?id=1636147020177471064&wfr=spider&for=pc">创建hexo分支</a></li><li><a href="https://www.cnblogs.com/dongyaotou/p/14130089.html">修改hexo分支为主分支</a></li><li>注意:此时的hexo为主分支,且hexo分支内含有博客文件(原main分支的内容,不用在意)</li></ul></li><li>本地操作<ul><li><a href="#克隆仓库">克隆仓库</a></li><li>[git提交])(#git提交)</li><li>推送到远程仓库:<code>git push origin hexo</code></li></ul></li><li>查看<ul><li>推送完成之后就可以去github上查看是否完成</li><li>推送之后,检查一下自己的博客是否还能打开</li><li>我记得我创建完hexo分支后,博客就打不开了,后来推送完在查看就又可以了</li><li>你们的视情况而定(p_o)</li><li>一定要多动手,多操作,出错了,多百度解决问题</li><li>如果糊涂了,就删了仓库再来一遍(我好像就删了一次仓库)</li></ul></li></ul><h4 id="双分支"><a href="#双分支" class="headerlink" title="双分支"></a>双分支</h4><hr><blockquote><p>基于我的hexo配置,生成的博客都是在<code>&lt;username&gt;.github.io</code>的<code>main</code>分支上的,<br>main也是我仓库的主分支<br>我打算在github上创建一个hexo分支去存放我的hexo配置文件<br>并且设置hexo为主分支(git默认只克隆主分支)</p></blockquote><h4 id="克隆仓库"><a href="#克隆仓库" class="headerlink" title="克隆仓库"></a>克隆仓库</h4><hr><figure class="highlight sh"><figcaption><span>克隆仓库</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~/Desktop</span><br><span class="line">$ ls</span><br><span class="line">Blog</span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/&lt;username&gt;/&lt;username&gt;.github.io.git</span><br><span class="line">$ ls</span><br><span class="line">Blog  &lt;username&gt;.github.io</span><br><span class="line"></span><br><span class="line"><span class="comment">#-------------</span></span><br><span class="line"><span class="comment"># Blog是我们的hexo初始化的文件夹</span></span><br><span class="line"><span class="comment"># &lt;username&gt;.github.io是我们刚克隆下来的仓库</span></span><br><span class="line"><span class="comment"># 这个仓库的分支是hexo分支</span></span><br></pre></td></tr></table></figure><h4 id="git提交"><a href="#git提交" class="headerlink" title="git提交"></a>git提交</h4><hr><figure class="highlight sh"><figcaption><span>git提交</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">$ ls</span><br><span class="line">Blog  &lt;username&gt;.github.io</span><br><span class="line">$ cp &lt;username&gt;.github.io/.git ./Blog/ -r</span><br><span class="line">$ <span class="built_in">cd</span> Blog</span><br><span class="line">$ git status</span><br><span class="line">xxxxx</span><br><span class="line">xxxxx</span><br><span class="line">$ git add .</span><br><span class="line">$ git commit -m <span class="string">&quot;hexo初始化提交&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#--------------</span></span><br><span class="line"><span class="comment"># cp &lt;username&gt;.github.io/.git ./Blog/ -r是将.git文件夹拷贝到Blog文件夹中</span></span><br><span class="line"><span class="comment"># git status是显示文件的状态</span></span><br><span class="line">    <span class="comment"># 大致分为两类</span></span><br><span class="line">    <span class="comment"># 一类是,xxx文件/文件夹被删除了--&gt;对应着&lt;username&gt;.github.io里面的文件</span></span><br><span class="line">    <span class="comment"># 一类是,xxx文件/文件夹被添加了--&gt;对应着Blog里面的文件</span></span><br><span class="line"><span class="comment"># git add .</span></span><br><span class="line"><span class="comment"># 这条是将所有的更改(修改/删除/创建)保存到暂存区</span></span><br><span class="line"><span class="comment"># git commit -m &quot;xxx&quot; 是将更改提交到工作区</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#--------------</span></span><br><span class="line"><span class="comment"># 注意事项</span></span><br><span class="line">$ cat .gitinore</span><br><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.<span class="built_in">log</span></span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br><span class="line"><span class="comment"># 如果Blog下没有.gitinore这个文件,创建并添加上面的内容</span></span><br><span class="line"><span class="comment"># 如果有,内容不是上面的,修改成上面的内容(这是hexo初始化自带的)</span></span><br><span class="line"><span class="comment"># 这个.gitinore文件可以让git屏蔽一些文件和文件夹(都是没啥用的)</span></span><br></pre></td></tr></table></figure><p>参考文章:<br><a href="https://www.cnblogs.com/codecheng99/p/12380700.html">hexo+yilia主题优化及双分支部署</a><br><a href="https://www.dazhuanlan.com/2019/12/09/5dedd4fc49fd3/">基于Github双分支和Hexo搭建博客</a>  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;摘要&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;上一篇文章中,已经成功了搭建好了博客,也可以发布了,但是只能在当前操作系统进行发布,这个就不是很方便,尤其是我的操作系统还是一个U盘系统,多数情况下可能还是使用windows等,这个时候把我
      
    
    </summary>
    
    
    
      <category term="hexo" scheme="https://zhangpf2000.github.io/tags/hexo/"/>
    
      <category term="github" scheme="https://zhangpf2000.github.io/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+Github Pages搭建个人博客</title>
    <link href="https://zhangpf2000.github.io/2021/03/13/Hexo-Github-Pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2.html/"/>
    <id>https://zhangpf2000.github.io/2021/03/13/Hexo-Github-Pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2.html/</id>
    <published>2021-03-13T12:39:16.000Z</published>
    <updated>2021-03-31T11:03:25.693Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hexo-Github个人博客"><a href="#Hexo-Github个人博客" class="headerlink" title="Hexo+Github个人博客"></a>Hexo+Github个人博客</h1><blockquote><p>摘要<br>搭建个人博客<br>借助Hexo和Github完成操作<br>本人环境相关信息:  </p><blockquote><p>使用Kubuntu 20.04.2 LTS系统<br>node版本 <code>v12.18.0</code><br>npm版本 <code>6.14.4</code><br>hexo版本 <code>5.4.0</code><br>hexo-cli版本 <code>4.2.0</code>  </p></blockquote><p>参考链接:  </p><blockquote><p><a href="https://hexo.io/zh-cn/">Hexo官网</a><br><a href="https://github.com/removeif/hexo-theme-amazing">Amazing主题</a><br><a href="https://removeif.github.io/theme/%E5%8D%9A%E5%AE%A2%E6%BA%90%E7%A0%81%E5%88%86%E4%BA%AB.html">Amazing主题参考</a><br><a href="https://github.com/ppoffice/hexo-theme-icarus">Icarus主题(Amazing基于Icarus改造)</a>  </p></blockquote></blockquote><br><span id="more"></span><figure class="highlight txt"><figcaption><span>简述 >folded</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">    我处于猎奇心理,在寒假打算搭建一个个人博客,在寒假最后几天,最终确定了我使用Hexo+Github来搭建属于我个人的博客.</span><br><span class="line">初次选用的主题是Icarus,由于初次了解这些东西,什么也不懂,不断的通过百度和其他网友的搭建过程了解了搭建过程.</span><br><span class="line">后遇到了Amazing主题, 博主removeif的网站有着对该主题的详细解释和操作,另外这个主题我也是十分的喜欢,就选中了这个主题.</span><br><span class="line">在此十分的感谢博主removeif</span><br></pre></td></tr></table></figure><h2 id="详细搭建过程"><a href="#详细搭建过程" class="headerlink" title="详细搭建过程"></a>详细搭建过程</h2><hr><ul><li>操作系统:<ul><li>选择了KUbuntu来做为我的系统环境</li><li>也是为了更加的熟悉Linux</li><li>选择理由<ul><li>ubuntu装了两次都崩溃了(装到u盘中)</li><li>debian装进去之后打不开图形化界面(显卡驱动也有些问题)</li><li>其他Linux系统不太熟</li><li>kde很好看nice</li></ul></li></ul></li><li>npm安装<ul><li>不晓得为啥使用包管理apt安装的版本低而且有些问题</li><li>去官方下载<a href="https://nodejs.org/dist/v12.18.0/node-v12.18.0.tar.gz">源代码(点击下载v12.18.0)</a>编译</li><li>解压出源代码编译(不需要管理员权限)</li><li>./configure</li><li>make (过程十分漫长)</li><li>make install</li><li>make clean</li></ul></li><li>npm安装hexo-cli<ul><li>npm -g install hexo-cli</li><li>有时候会出现npm没有全局权限的报错(npm安装全局权限报错 Error: EACCES: permission denied)</li><li><a href="https://www.jianshu.com/p/6b2ac5bd77b6">解决办法</a></li><li>1.创建一个全局安装目录(以后全局安装的包都在这)<code>mkdir ~/.npm-global</code></li><li>2.配置npm使用新的目录路径<code>npm config set prefix &#39;~/.npm-global&#39;</code></li><li>3.添加系统变量<code>export PATH=~/.npm-global/bin:$PATH</code>只能当前使用,永久使用请手动添加<code>PATH=&quot;~/.npm-global/bin:$PATH&quot;</code>到<code>~/.profile</code>中</li><li>4.更新系统变量<code>source ~/.profile</code></li></ul></li><li><a href="#本地搭建并预览">本地搭建并预览</a><ul><li>这个搭建的博客只能<a href="http://localhost:4000">本地预览</a></li><li>使用的主题是默认主题</li></ul></li><li><a href="#更换hexo主题">更换hexo主题</a><ul><li>更换主题之后要修改部分配置以适合自己</li><li><a href="#配置主题细节">配置主题细节</a></li><li>每次更新主题之后请预览一下,防止出错不知道咋回事</li></ul></li><li><a href="#配置hexo">配置hexo</a><ul><li>配置完成之后一定要预览查看有没有出现问题</li><li>初次配置的时候推荐使用博主的配置</li></ul></li><li><a href="#Github">Github</a><ul><li>注册Github和创建仓库就不说了,网上很多教程</li><li>部署到github: <code>hexo d</code></li><li>过一会应该就可以访问<code>&lt;username&gt;.github.io</code>看到你的博客了</li></ul></li><li>后续<ul><li>部署到github还有很多可以做的:比如利用分支来保存hexo信息</li><li>hexo中还有很多有趣的地方可以开发</li><li>amazing主题中还有许多强大的功能</li><li>目前我很多东西还不晓得咋搞,先放着吧</li><li>配置hexo,多看看<a href="https://hexo.io/zh-cn/docs/">官网</a></li><li>配置hexo主题.多看看博主的<a href="https://removeif.github.io/theme/%E5%8D%9A%E5%AE%A2%E6%BA%90%E7%A0%81%E5%88%86%E4%BA%AB.html">帖子</a>和<a href="https://removeif.github.io">个人博客</a></li><li><a href="https://blog.juanertu.com/archives/e3dc5cbb.html">Hexo框架(一)：使用Hexo快速搭建个人博客</a></li></ul></li></ul><h4 id="本地搭建并预览"><a href="#本地搭建并预览" class="headerlink" title="本地搭建并预览"></a>本地搭建并预览</h4><hr><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init Blog</span><br><span class="line">$ <span class="built_in">cd</span> Blog</span><br><span class="line"><span class="comment"># 文件目录结构</span></span><br><span class="line">:&lt;&lt;!</span><br><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── <span class="built_in">source</span></span><br><span class="line">│   ├── _drafts</span><br><span class="line">│   └── _posts</span><br><span class="line">└── themes</span><br><span class="line">!</span><br><span class="line">$ npm install <span class="comment"># 安装依赖</span></span><br><span class="line"><span class="comment"># 推荐博主的依赖:https://removeif.github.io/theme/%E5%8D%9A%E5%AE%A2%E6%BA%90%E7%A0%81%E5%88%86%E4%BA%AB.html</span></span><br><span class="line"><span class="comment"># 把博主帖子最后的package.json内容复制到你的package.json文件中再执行npm install</span></span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><h4 id="更换hexo主题"><a href="#更换hexo主题" class="headerlink" title="更换hexo主题"></a>更换hexo主题</h4><hr><figure class="highlight sh"><figcaption><span>更换hexo主题 >folded</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 以Amazing为例</span></span><br><span class="line">$ <span class="built_in">cd</span> Blog</span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/removeif/hexo-theme-amazing.git themes/amazing</span><br><span class="line">$ vim _config.yml <span class="comment"># 注释:这个_config.yml是Blog文件夹下的.yml文件,不是刚才下载的那个</span></span><br><span class="line"><span class="comment"># 修改主题</span></span><br><span class="line"><span class="comment"># theme: amazing</span></span><br><span class="line">$ <span class="built_in">cd</span> ./theme/amazing</span><br><span class="line">$ npm install <span class="comment">#安装主题的依赖,这个在clone的时候package.json这就有内容了</span></span><br></pre></td></tr></table></figure><h4 id="配置主题细节"><a href="#配置主题细节" class="headerlink" title="配置主题细节"></a>配置主题细节</h4><hr><figure class="highlight plain"><figcaption><span>_config.yml配置文件 >folded</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># 文件是Blog&#x2F;theme&#x2F;amazing&#x2F;_config.yml</span><br><span class="line"># 我只是讲解一些我所配置的东西,很多东西我也不会搞</span><br><span class="line"></span><br><span class="line"># 版本号</span><br><span class="line">version: 4.0.0</span><br><span class="line"></span><br><span class="line"># Icarus 主题选择: &quot;default&quot; or &quot;cyberpunk&quot;</span><br><span class="line">variant: default</span><br><span class="line"># 网站Logo的URL</span><br><span class="line">logo: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;ZhangPF2000&#x2F;Image@main&#x2F;img&#x2F;签名.png</span><br><span class="line"># 页面数据配置</span><br><span class="line">head:</span><br><span class="line">    # 博客的icon地址(URL)</span><br><span class="line">    favicon: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;ZhangPF2000&#x2F;Image@main&#x2F;img&#x2F;logo.jpg</span><br><span class="line">    # Open Graph metadata(翻译:打开图形元数据)</span><br><span class="line">    # https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;helpers.html#open-graph</span><br><span class="line">    open_graph:</span><br><span class="line">        # Page title (og:title) (optional)</span><br><span class="line">        # You should leave this blank for most of the time</span><br><span class="line">        title: ZhangPF2000</span><br><span class="line">        # Page type (og:type) (optional)</span><br><span class="line">        # You should leave this blank for most of the time</span><br><span class="line">        type: blog</span><br><span class="line">        # Page URL (og:url) (optional)</span><br><span class="line">        # You should leave this blank for most of the time</span><br><span class="line">        url: https:&#x2F;&#x2F;ZhangPF2000.github.io&#x2F;</span><br><span class="line">        # Page cover (og:image) (optional)</span><br><span class="line">        # You should leave this blank for most of the time</span><br><span class="line">        image: https:&#x2F;&#x2F;i1.hdslb.com&#x2F;bfs&#x2F;face&#x2F;e2ddc2275df94af1cebf7028aa1bdc1bb30e78f4.jpg</span><br><span class="line">        # Site name (og:site_name) (optional)</span><br><span class="line">        # You should leave this blank for most of the time</span><br><span class="line">        site_name: ZhangPF2000</span><br><span class="line">        # Page author (article:author) (optional)</span><br><span class="line">        # You should leave this blank for most of the time</span><br><span class="line">        author: ZhangPF2000</span><br><span class="line">        # Page description (og:description) (optional)</span><br><span class="line">        # You should leave this blank for most of the time</span><br><span class="line">        description: </span><br><span class="line">        # Twitter card type (twitter:card)</span><br><span class="line">        twitter_card: </span><br><span class="line">        # Twitter ID (twitter:creator)</span><br><span class="line">        twitter_id: </span><br><span class="line">        # Twitter Site (twitter:site)</span><br><span class="line">        twitter_site: </span><br><span class="line">        # Google+ profile link (deprecated)</span><br><span class="line">        google_plus: </span><br><span class="line">        # Facebook admin ID</span><br><span class="line">        fb_admins: </span><br><span class="line">        # Facebook App ID</span><br><span class="line">        fb_app_id: </span><br><span class="line">    # Structured data of the page</span><br><span class="line">    # https:&#x2F;&#x2F;developers.google.com&#x2F;search&#x2F;docs&#x2F;guides&#x2F;intro-structured-data</span><br><span class="line">    # 这个可以不填</span><br><span class="line">    structured_data:</span><br><span class="line">        # Page title (optional)</span><br><span class="line">        # You should leave this blank for most of the time</span><br><span class="line">        title: </span><br><span class="line">        # Page description (optional)</span><br><span class="line">        # You should leave this blank for most of the time</span><br><span class="line">        description: </span><br><span class="line">        # Page URL (optional)</span><br><span class="line">        # You should leave this blank for most of the time</span><br><span class="line">        url: </span><br><span class="line">        # Page author (article:author) (optional)</span><br><span class="line">        # You should leave this blank for most of the time</span><br><span class="line">        author: </span><br><span class="line">        # Page images (optional)</span><br><span class="line">        # You should leave this blank for most of the time</span><br><span class="line">        image: </span><br><span class="line">    # Additional HTML meta tags in an array</span><br><span class="line">    # 这个也可以不填</span><br><span class="line">    meta:</span><br><span class="line">        # Meta tag specified in &lt;attribute&gt;&#x3D;&lt;value&gt; style</span><br><span class="line">        # E.g., name&#x3D;theme-color;content&#x3D;#123456 &#x3D;&gt; &lt;meta name&#x3D;&quot;theme-color&quot; content&#x3D;&quot;#123456&quot;&gt;</span><br><span class="line">        - &#39;&#39;</span><br><span class="line">    # URL or path to the website&#39;s RSS atom.xml</span><br><span class="line">    rss: </span><br><span class="line"># Page top navigation bar configurations</span><br><span class="line">navbar:</span><br><span class="line">    # Naviagtion menu items</span><br><span class="line">    menu:</span><br><span class="line">        # 这个地方把&quot;Home&quot;改成&quot;主页&quot;就可以在页面显示中文菜单了(全部都改,后面的&#x2F;和&#x2F;tags之类的不要动)</span><br><span class="line">        主页: &#x2F;</span><br><span class="line">        归档: &#x2F;archives</span><br><span class="line">        分类: &#x2F;categories</span><br><span class="line">        标签: &#x2F;tags</span><br><span class="line">        影音: &#x2F;media</span><br><span class="line">        相册: &#x2F;album</span><br><span class="line">        友链: &#x2F;friend</span><br><span class="line">        # 留言: &#x2F;message</span><br><span class="line">        # 碎碎念: &#x2F;self-talking</span><br><span class="line">        # 音乐: &#x2F;music</span><br><span class="line">        关于: &#x2F;about</span><br><span class="line">    # Links to be shown on the right of the navigation bar</span><br><span class="line">    links:</span><br><span class="line">        # 这两个链接是页面右上的搜索那个位置(搜索左边有一个github和四条竖杠的图表)</span><br><span class="line">        # 不推荐动</span><br><span class="line">        Join Gitter:</span><br><span class="line">            # 这个是amazing论坛,里面有些对amazing主题的交流,可以去看看</span><br><span class="line">            icon: fab fa-gitter</span><br><span class="line">            url: &#39;https:&#x2F;&#x2F;gitter.im&#x2F;hexo-theme-amazing&#x2F;community&#39;</span><br><span class="line">        Download on GitHub:</span><br><span class="line">            # 这个是amazing的下载链接</span><br><span class="line">            icon: fab fa-github</span><br><span class="line">            url: &#39;https:&#x2F;&#x2F;github.com&#x2F;removeif&#x2F;hexo-theme-amazing&#39;</span><br><span class="line"># Page footer configurations</span><br><span class="line">footer:</span><br><span class="line">    # Links to be shown on the right of the footer section</span><br><span class="line">    # 这个也不推荐动</span><br><span class="line">    links:</span><br><span class="line">        # 这个是右下角的三个图标</span><br><span class="line">        # 一个圆圈cc</span><br><span class="line">        # 一个圆圈小人</span><br><span class="line">        # 一个github图表</span><br><span class="line">        Creative Commons:</span><br><span class="line">            icon: fab fa-creative-commons</span><br><span class="line">            url: &#39;https:&#x2F;&#x2F;creativecommons.org&#x2F;&#39;</span><br><span class="line">        Attribution 4.0 International:</span><br><span class="line">            icon: fab fa-creative-commons-by</span><br><span class="line">            url: &#39;https:&#x2F;&#x2F;creativecommons.org&#x2F;licenses&#x2F;by&#x2F;4.0&#x2F;&#39;</span><br><span class="line">        Download on GitHub:</span><br><span class="line">            icon: fab fa-github</span><br><span class="line">            url: &#39;https:&#x2F;&#x2F;github.com&#x2F;removeif&#x2F;hexo-theme-amazing&#39;</span><br><span class="line"># Article related configurations</span><br><span class="line">article:</span><br><span class="line">    # Code highlight settings</span><br><span class="line">    highlight:</span><br><span class="line">        # Code highlight themes</span><br><span class="line">        # https:&#x2F;&#x2F;github.com&#x2F;highlightjs&#x2F;highlight.js&#x2F;tree&#x2F;master&#x2F;src&#x2F;styles</span><br><span class="line">        theme: atom-one-light</span><br><span class="line">        # Show copy code button</span><br><span class="line">        clipboard: true</span><br><span class="line">        # Default folding status of the code blocks. Can be &quot;&quot;, &quot;folded&quot;, &quot;unfolded&quot;</span><br><span class="line">        fold: unfolded</span><br><span class="line">    # Whether to show estimated article reading time</span><br><span class="line">    readtime: true</span><br><span class="line">    # Article licensing block</span><br><span class="line">    licenses:</span><br><span class="line">        Creative Commons:</span><br><span class="line">            icon: fab fa-creative-commons</span><br><span class="line">            url: &#39;https:&#x2F;&#x2F;creativecommons.org&#x2F;&#39;</span><br><span class="line">        Attribution:</span><br><span class="line">            icon: fab fa-creative-commons-by</span><br><span class="line">            url: &#39;https:&#x2F;&#x2F;creativecommons.org&#x2F;licenses&#x2F;by&#x2F;4.0&#x2F;&#39;</span><br><span class="line">        Noncommercial:</span><br><span class="line">            icon: fab fa-creative-commons-nc</span><br><span class="line">            url: &#39;https:&#x2F;&#x2F;creativecommons.org&#x2F;licenses&#x2F;by-nc&#x2F;4.0&#x2F;&#39;</span><br><span class="line"># Search plugin configurations</span><br><span class="line"># https:&#x2F;&#x2F;ppoffice.github.io&#x2F;hexo-theme-icarus&#x2F;categories&#x2F;Plugins&#x2F;Search&#x2F;</span><br><span class="line"># 这个是搜索设置(我没动过,还是有的好)</span><br><span class="line">search:</span><br><span class="line">    type: insight</span><br><span class="line"># Comment plugin configurations</span><br><span class="line"># https:&#x2F;&#x2F;ppoffice.github.io&#x2F;hexo-theme-icarus&#x2F;categories&#x2F;Plugins&#x2F;Comment&#x2F;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 下面这些是评论设置:我没啥空去搞这个评论</span><br><span class="line"># 目前也不打算搞这个,有需要的去https:&#x2F;&#x2F;removeif.github.io&#x2F;theme&#x2F;%E5%8D%9A%E5%AE%A2%E6%BA%90%E7%A0%81%E5%88%86%E4%BA%AB.html博主贴子看看如何设置</span><br><span class="line"># 我全部都注释掉了</span><br><span class="line">#comment:</span><br><span class="line">#    type: disqus</span><br><span class="line">#    # Disqus shortname</span><br><span class="line">#    shortname: &#39;&#39;</span><br><span class="line"># Comment plugin configurations</span><br><span class="line"># https:&#x2F;&#x2F;ppoffice.github.io&#x2F;hexo-theme-icarus&#x2F;categories&#x2F;Plugins&#x2F;Comment&#x2F;</span><br><span class="line">#comment:</span><br><span class="line">#    type: gitalk</span><br><span class="line">#    language: zh-CN #zh-CN #Localization language key, en, zh-CN and zh-TW are currently available.</span><br><span class="line">#    owner: removeif         # (required) GitHub user name</span><br><span class="line">#    repo: blog_comment          # (required) GitHub repository name</span><br><span class="line">#    client_id: 46a9f34ea0129d8     # (required) OAuth application client id</span><br><span class="line">#    client_secret: 79c7c9cb847e141757d78bcbf89f0655b24 # (required) OAuth application client secret</span><br><span class="line">#    admin: [&#39;removeif&#39;]</span><br><span class="line">#    create_issue_manually: true</span><br><span class="line">#    distraction_free_mode: false</span><br><span class="line">#    has_hot_recommend: true # 是否有热门推荐</span><br><span class="line">#    has_latest_comment: true #是否有最新评论</span><br><span class="line">    </span><br><span class="line"># comment:</span><br><span class="line">#     type: valine</span><br><span class="line">#     app_id: rOtVIhvG3kd7QaSU9R-gzGzoHsz</span><br><span class="line">#     app_key: F2sNV0Ckqvb3DEn3z</span><br><span class="line">#     notify: false</span><br><span class="line">#     verify: false</span><br><span class="line">#     avatar: &#39;mp&#39;</span><br><span class="line">#     placeholder: &#39;留下您的高见！&#39;</span><br><span class="line">#     has_latest_comment: true #是否有最新评论 true-有，false-无</span><br><span class="line">#     owner: 辣椒の酱 #博主名 最新评论标注[博主]</span><br><span class="line">#     required_fields: [&#39;nick&#39;, &#39;mail&#39;, &#39;link&#39;]</span><br><span class="line">#     lang: en #zh-CN zh-TW en ja</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># utteranc site: https:&#x2F;&#x2F;utteranc.es&#x2F;</span><br><span class="line"># comment:</span><br><span class="line">#     type: utteranc</span><br><span class="line">#     repo: removeif&#x2F;utteranc_comment # (required) GitHub userName &amp; repository name</span><br><span class="line">#     issue_term: pathname </span><br><span class="line">#     issue_number: </span><br><span class="line">#     label: </span><br><span class="line">#     theme: github-light</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Donate plugin configurations</span><br><span class="line"># https:&#x2F;&#x2F;ppoffice.github.io&#x2F;hexo-theme-icarus&#x2F;categories&#x2F;Plugins&#x2F;Donation&#x2F;</span><br><span class="line">#donates:</span><br><span class="line">  # 支付宝和微信支付的图标</span><br><span class="line">  # 我注释掉了</span><br><span class="line">  # 一般是在文章的最下面的位置</span><br><span class="line">  # Alipay donate button configurations</span><br><span class="line">    #-</span><br><span class="line">        # Donation entry name</span><br><span class="line">        #type: alipay</span><br><span class="line">        # Qrcode image URL</span><br><span class="line">        #qrcode: &#39;https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;removeif&#x2F;blog_image&#x2F;master&#x2F;img&#x2F;2019&#x2F;20190802135456.png&#39;</span><br><span class="line">    #-</span><br><span class="line">        # Donation entry name</span><br><span class="line">        #type: wechat</span><br><span class="line">        # Qrcode image URL</span><br><span class="line">        #qrcode: &#39;https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;removeif&#x2F;blog_image&#x2F;master&#x2F;img&#x2F;2019&#x2F;20190802135550.png&#39;</span><br><span class="line"></span><br><span class="line">    # 其他支付....</span><br><span class="line">    # &quot;Buy me a coffee&quot; donate button configurations</span><br><span class="line">#    -</span><br><span class="line">#        type: buymeacoffee</span><br><span class="line">#        # URL to the &quot;Buy me a coffee&quot; page</span><br><span class="line">#        url: &#39;&#39;</span><br><span class="line">#    # Patreon donate button configurations</span><br><span class="line">#    -</span><br><span class="line">#        type: patreon</span><br><span class="line">#        # URL to the Patreon page</span><br><span class="line">#        url: &#39;&#39;</span><br><span class="line">#    # Paypal donate button configurations</span><br><span class="line">#    -</span><br><span class="line">#        type: paypal</span><br><span class="line">#        # Paypal business ID or email address</span><br><span class="line">#        business: &#39;&#39;</span><br><span class="line">#        # Currency code</span><br><span class="line">#        currency_code: USD</span><br><span class="line">#    # Wechat donate button configurations</span><br><span class="line">#    -</span><br><span class="line">#        type: wechat</span><br><span class="line">#        # Wechat qrcode image URL</span><br><span class="line">#        qrcode: &#39;&#39;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Share plugin configurations</span><br><span class="line"># https:&#x2F;&#x2F;ppoffice.github.io&#x2F;hexo-theme-icarus&#x2F;categories&#x2F;Plugins&#x2F;Share&#x2F;</span><br><span class="line"># 分享设置:我没咋动过</span><br><span class="line">share:</span><br><span class="line">    type: sharejs</span><br><span class="line">    # URL to the ShareThis share plugin script</span><br><span class="line">    install_url: &#39;&#39;</span><br><span class="line"></span><br><span class="line"># Sidebar configurations.</span><br><span class="line"># Please be noted that a sidebar is only visible when it has at least one widget</span><br><span class="line"># 下面这些好像是设置整体布局的</span><br><span class="line"># 我感觉自带的布局就挺好,没动,需要的请自行设置然后预览一下看看</span><br><span class="line">sidebar:</span><br><span class="line">    # Left sidebar configurations</span><br><span class="line">    left:</span><br><span class="line">        # Whether the sidebar sticks to the top when page scrolls</span><br><span class="line">        sticky: true</span><br><span class="line">    # Right sidebar configurations</span><br><span class="line">    right:</span><br><span class="line">        # Whether the sidebar sticks to the top when page scrolls</span><br><span class="line">        sticky: false</span><br><span class="line"># Sidebar widget configurations</span><br><span class="line"># http:&#x2F;&#x2F;ppoffice.github.io&#x2F;hexo-theme-icarus&#x2F;categories&#x2F;Widgets&#x2F;</span><br><span class="line">widgets:</span><br><span class="line">    # Table of contents widget configurations</span><br><span class="line">    -</span><br><span class="line">        # Where should the widget be placed, left sidebar or right sidebar</span><br><span class="line">        position: left</span><br><span class="line">        type: toc</span><br><span class="line">        # Select show index</span><br><span class="line">        index: false</span><br><span class="line">    # Profile widget configurations</span><br><span class="line">    -</span><br><span class="line">        # Where should the widget be placed, left sidebar or right sidebar</span><br><span class="line">        position: left</span><br><span class="line">        type: profile</span><br><span class="line">        # Author name</span><br><span class="line">        # 页面左边的那个大大的作者名</span><br><span class="line">        author: ZhangPF2000</span><br><span class="line">        # Author title</span><br><span class="line">        # 作者的标题</span><br><span class="line">        author_title: 大二宅男</span><br><span class="line">        # Author&#39;s current location</span><br><span class="line">        # 作者位置</span><br><span class="line">        location: 浦东新区</span><br><span class="line">        # URL or path to the avatar image</span><br><span class="line">        # 那个大大的头像</span><br><span class="line">        avatar: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;ZhangPF2000&#x2F;Image@main&#x2F;img&#x2F;logo.jpg</span><br><span class="line">        # Whether show the rounded avatar image</span><br><span class="line">        avatar_rounded: true</span><br><span class="line">        # Email address for the Gravatar</span><br><span class="line">        gravatar:</span><br><span class="line">        # URL or path for the follow button</span><br><span class="line">        follow_link: &#39;https:&#x2F;&#x2F;github.com&#x2F;ppoffice&#39;</span><br><span class="line">        # Links to be shown on the bottom of the profile widget</span><br><span class="line">        social_links:</span><br><span class="line">            # &quot;关注我&quot;下面的几个图标</span><br><span class="line">            Github:</span><br><span class="line">                icon: fab fa-github</span><br><span class="line">                url: &#39;https:&#x2F;&#x2F;github.com&#x2F;ZhangPF2000&#39;</span><br><span class="line">            #Weibo:</span><br><span class="line">                #icon: fab fa-weibo</span><br><span class="line">                #url: &#39;https:&#x2F;&#x2F;weibo.com&#x2F;removeif&#39;</span><br><span class="line">            Email:</span><br><span class="line">                icon: fa fa-envelope</span><br><span class="line">                url: &#39;mailto:2812827294@qq.com&#39;</span><br><span class="line">            #Next:</span><br><span class="line">                #icon: fab fa-dribbble</span><br><span class="line">                #url: &#39;https:&#x2F;&#x2F;removeif.github.io&#x2F;remove.io&#39;</span><br><span class="line">            RSS:</span><br><span class="line">                icon: fas fa-rss</span><br><span class="line">                url: &#x2F;atom.xml</span><br><span class="line">        has_hitokoto: true</span><br><span class="line">    # Recommendation links widget configurations</span><br><span class="line">    -</span><br><span class="line">        # Where should the widget be placed, left sidebar or right sidebar</span><br><span class="line">        position: left</span><br><span class="line">        type: links</span><br><span class="line">        # Names and URLs of the sites</span><br><span class="line">        # 网站链接,自己添加几个喜欢的网站(只显示域名)</span><br><span class="line">        links:</span><br><span class="line">            Hexo: &#39;https:&#x2F;&#x2F;hexo.io&#39;</span><br><span class="line">            bilibili: &#39;https:&#x2F;&#x2F;space.bilibili.com&#x2F;476971740&#39;</span><br><span class="line">            amazing: &#39;https:&#x2F;&#x2F;github.com&#x2F;removeif&#x2F;hexo-theme-amazing&#39;</span><br><span class="line">            #Bulma: &#39;https:&#x2F;&#x2F;bulma.io&#39;</span><br><span class="line">    # Latest comment widget configurations</span><br><span class="line">    -</span><br><span class="line">        # Where should the widget be placed, left sidebar or right sidebar</span><br><span class="line">        position: right</span><br><span class="line">        type: latest_comment</span><br><span class="line">    # Recent posts widget configurations</span><br><span class="line">    -</span><br><span class="line">        # Where should the widget be placed, left sidebar or right sidebar</span><br><span class="line">        position: right</span><br><span class="line">        type: recent_posts</span><br><span class="line">    # Categories widget configurations</span><br><span class="line">    -</span><br><span class="line">        # Where should the widget be placed, left sidebar or right sidebar</span><br><span class="line">        position: right</span><br><span class="line">        type: categories</span><br><span class="line">    # Archives widget configurations</span><br><span class="line">    -</span><br><span class="line">        # Where should the widget be placed, left sidebar or right sidebar</span><br><span class="line">        position: right</span><br><span class="line">        type: archives</span><br><span class="line">    # Tags widget configurations</span><br><span class="line">    -</span><br><span class="line">        # Where should the widget be placed, left sidebar or right sidebar</span><br><span class="line">        position: right</span><br><span class="line">        type: tags</span><br><span class="line">    # Google FeedBurner email subscription widget configurations</span><br><span class="line">    -</span><br><span class="line">        # Where should the widget be placed, left sidebar or right sidebar</span><br><span class="line">        position: right</span><br><span class="line">        type: subscribe_email</span><br><span class="line">        # Hint text under the email input</span><br><span class="line">        description: </span><br><span class="line">        # Feedburner ID</span><br><span class="line">        feedburner_id: &#39;&#39;</span><br><span class="line">    # Google AdSense unit configurations</span><br><span class="line">    -</span><br><span class="line">        # Where should the widget be placed, left sidebar or right sidebar</span><br><span class="line">        position: right</span><br><span class="line">        type: adsense</span><br><span class="line"></span><br><span class="line"># AdSense client ID</span><br><span class="line">#adsense_client_id: #&#39;ca-pub7634&#39;</span><br><span class="line"># AdSense AD unit ID</span><br><span class="line">#adsense_slot_id: &#39;5588&#39;</span><br><span class="line"># article head ad</span><br><span class="line">#article_head_has_ad: true</span><br><span class="line"># comment head ad</span><br><span class="line">#comment_head_has_ad: true</span><br><span class="line"># other ad</span><br><span class="line">#index_zero_position_ad: true</span><br><span class="line">#index_ad_positions: 2,5,9 #首页adsense放置广告的位置，尽量少配置些，多了有可能不显示。一位的时候，加个逗号，如1,或者1,5,9</span><br><span class="line"># Plugin configurations</span><br><span class="line"># https:&#x2F;&#x2F;ppoffice.github.io&#x2F;hexo-theme-icarus&#x2F;categories&#x2F;Plugins&#x2F;</span><br><span class="line">plugins:</span><br><span class="line">    # Enable page startup animations</span><br><span class="line">    animejs: true</span><br><span class="line">    # Show the &quot;back to top&quot; button</span><br><span class="line">    back_to_top: true</span><br><span class="line">    # Baidu Analytics plugin settings</span><br><span class="line">    # https:&#x2F;&#x2F;tongji.baidu.com</span><br><span class="line">    baidu_analytics:</span><br><span class="line">        # Baidu Analytics tracking ID</span><br><span class="line">        tracking_id: </span><br><span class="line">    # BuSuanZi site&#x2F;page view counter</span><br><span class="line">    # https:&#x2F;&#x2F;busuanzi.ibruce.info</span><br><span class="line">    busuanzi: true</span><br><span class="line">    # CNZZ statistics</span><br><span class="line">    # https:&#x2F;&#x2F;www.umeng.com&#x2F;web</span><br><span class="line">    cnzz:</span><br><span class="line">        # CNZZ tracker id</span><br><span class="line">        id: </span><br><span class="line">        # CNZZ website id</span><br><span class="line">        web_id: </span><br><span class="line">    # Enable the lightGallery and Justified Gallery plugins</span><br><span class="line">    gallery: true</span><br><span class="line">    # Google Analytics plugin settings</span><br><span class="line">    # https:&#x2F;&#x2F;analytics.google.com</span><br><span class="line">    google_analytics:</span><br><span class="line">        # Google Analytics tracking ID</span><br><span class="line">        tracking_id: </span><br><span class="line">    # Hotjar user feedback plugin</span><br><span class="line">    # https:&#x2F;&#x2F;www.hotjar.com&#x2F;</span><br><span class="line">    hotjar:</span><br><span class="line">        # Hotjar site id</span><br><span class="line">        site_id: </span><br><span class="line">    # Enable the KaTeX math typesetting supprot</span><br><span class="line">    # https:&#x2F;&#x2F;katex.org&#x2F;</span><br><span class="line">    katex: false</span><br><span class="line">    # Enable the MathJax math typesetting support</span><br><span class="line">    # https:&#x2F;&#x2F;www.mathjax.org&#x2F;</span><br><span class="line">    mathjax: false</span><br><span class="line">    # Enable the Outdated Browser plugin</span><br><span class="line">    # http:&#x2F;&#x2F;outdatedbrowser.com&#x2F;</span><br><span class="line">    outdated_browser: false</span><br><span class="line">    # Show a progress bar at top of the page on page loading</span><br><span class="line">    progressbar: true</span><br><span class="line"># CDN provider settings</span><br><span class="line"># https:&#x2F;&#x2F;ppoffice.github.io&#x2F;hexo-theme-icarus&#x2F;Configuration&#x2F;Theme&#x2F;speed-up-your-site-with-custom-cdn&#x2F;</span><br><span class="line">providers:</span><br><span class="line">    # Name or URL template of the JavaScript and&#x2F;or stylesheet CDN provider</span><br><span class="line">    cdn: loli</span><br><span class="line">    # Name or URL template of the webfont CDN provider</span><br><span class="line">    fontcdn: loli</span><br><span class="line">    # Name or URL of the fontawesome icon font CDN provider</span><br><span class="line">    iconcdn: loli</span><br><span class="line">    # https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;removeif&#x2F;removeif.github.io@v1.0.6&#x2F;json_data&#x2F;record.json, cdn前缀，对于hexo new page 页面中引用的资源文件不生效，需要手动改，如friend友链页中引用的资源</span><br><span class="line">    # my_cdn_pre: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;removeif&#x2F;removeif-demo@v1.0.8&#x2F; #https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;removeif&#x2F;removeif.github.io@v2.2.1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#footer_copyright_dsec: © 版权说明：[本网站所有内容均收集于互联网或自己创作,&lt;br &#x2F;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;方便于网友与自己学习交流，如有侵权，请&lt;a href&#x3D;&quot;&#x2F;message&quot; target&#x3D;&quot;_blank&quot;&gt;留言&lt;&#x2F;a&gt;，立即处理]&lt;br &#x2F;&gt; #footer 版权说明 可自由配置</span><br><span class="line">website_start_time: 2018&#x2F;11&#x2F;11 00:00:00 #网站运行开始时间,不填不显示</span><br><span class="line">#footer_registered_no: 川ICP备88888888号-8（测试） #备案号</span><br><span class="line">#side_music_netease_id: 2364053447 #侧边栏网易云歌单id</span><br><span class="line">busuanzi_only_count: false #当上面plugins中busuanzi: true时，此配置busuanzi_only_count为true时，网站不显示不蒜子统计数据，但是会每次统计。false时显示统计数据。</span><br><span class="line">has_live_2D_switch: true #live2D开关 true-开 false-关</span><br><span class="line">use_pjax: true #是否pjax</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#-----------------------</span><br><span class="line"># 这些是我自己对页面设置的一些配置</span><br><span class="line"># 更加详细的内容请看博主的帖子:https:&#x2F;&#x2F;removeif.github.io&#x2F;theme&#x2F;%E5%8D%9A%E5%AE%A2%E6%BA%90%E7%A0%81%E5%88%86%E4%BA%AB.html</span><br><span class="line">#-----------------------</span><br></pre></td></tr></table></figure><h4 id="配置hexo"><a href="#配置hexo" class="headerlink" title="配置hexo"></a>配置hexo</h4><hr><figure class="highlight plain"><figcaption><span>_config.yml配置文件 >folded</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"># 这个_config.yml文件是在Blog下的,是配置hexo的,要和配置主题的_config.yml区分开来</span><br><span class="line"># 配置完主题就可以设置一些hexo的东西了(配置主题和配置hexo的顺序可以调换过来)</span><br><span class="line"></span><br><span class="line"># URL</span><br><span class="line">## Set your site url here. For example, if you use GitHub Page, set url as &#39;https:&#x2F;&#x2F;username.github.io&#x2F;project&#39;</span><br><span class="line"></span><br><span class="line"># 注意:这个地方不要设置成</span><br><span class="line"># https:&#x2F;&#x2F;zhangpf2000.github.io&#x2F;root</span><br><span class="line"># root: &#x2F;root</span><br><span class="line"># 博主也没设置,如果添加上root或其他,会导致部分博客其他某些地方出现错误,无法加载数据资源等</span><br><span class="line">url: https:&#x2F;&#x2F;zhangpf2000.github.io</span><br><span class="line">root: &#x2F;</span><br><span class="line">permalink: :year&#x2F;:month&#x2F;:day&#x2F;:title&#x2F;</span><br><span class="line">permalink_defaults:</span><br><span class="line">pretty_urls:</span><br><span class="line">  trailing_index: true # Set to false to remove trailing &#39;index.html&#39; from permalinks</span><br><span class="line">  trailing_html: true # Set to false to remove trailing &#39;.html&#39; from permalinks</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Extensions</span><br><span class="line">## Plugins: https:&#x2F;&#x2F;hexo.io&#x2F;plugins&#x2F;</span><br><span class="line">## Themes: https:&#x2F;&#x2F;hexo.io&#x2F;themes&#x2F;</span><br><span class="line">theme: amazing</span><br><span class="line"># 使用主题: amazing</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Deployment</span><br><span class="line"># 这个是使用github的时候设置的</span><br><span class="line">## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;one-command-deployment</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https:&#x2F;&#x2F;github.com&#x2F;ZhangPF2000&#x2F;ZhangPF2000.github.io.git</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><h4 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h4><hr><figure class="highlight txt"><figcaption><span>github >folded</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1-&gt;注册帐号</span><br><span class="line">2-&gt;创建&lt;username&gt;.github.io仓库</span><br><span class="line">3-&gt;配置好git用户名/邮箱和ssh设置,确保你的git能链接到你的github</span><br><span class="line">4-&gt;配置_config.yml中的远程仓库信息</span><br><span class="line">5-&gt;hexo clean</span><br><span class="line">6-&gt;hexo g</span><br><span class="line">7-&gt;hexo d</span><br></pre></td></tr></table></figure><h3 id="希望能对你有所帮助-p-o"><a href="#希望能对你有所帮助-p-o" class="headerlink" title="希望能对你有所帮助 (p_o)"></a>希望能对你有所帮助 (p_o)</h3>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Hexo-Github个人博客&quot;&gt;&lt;a href=&quot;#Hexo-Github个人博客&quot; class=&quot;headerlink&quot; title=&quot;Hexo+Github个人博客&quot;&gt;&lt;/a&gt;Hexo+Github个人博客&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;摘要&lt;br&gt;搭建个人博客&lt;br&gt;借助Hexo和Github完成操作&lt;br&gt;本人环境相关信息:  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;使用Kubuntu 20.04.2 LTS系统&lt;br&gt;node版本 &lt;code&gt;v12.18.0&lt;/code&gt;&lt;br&gt;npm版本 &lt;code&gt;6.14.4&lt;/code&gt;&lt;br&gt;hexo版本 &lt;code&gt;5.4.0&lt;/code&gt;&lt;br&gt;hexo-cli版本 &lt;code&gt;4.2.0&lt;/code&gt;  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;参考链接:  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://hexo.io/zh-cn/&quot;&gt;Hexo官网&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/removeif/hexo-theme-amazing&quot;&gt;Amazing主题&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://removeif.github.io/theme/%E5%8D%9A%E5%AE%A2%E6%BA%90%E7%A0%81%E5%88%86%E4%BA%AB.html&quot;&gt;Amazing主题参考&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/ppoffice/hexo-theme-icarus&quot;&gt;Icarus主题(Amazing基于Icarus改造)&lt;/a&gt;  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;br&gt;
    
    </summary>
    
    
    
      <category term="hexo" scheme="https://zhangpf2000.github.io/tags/hexo/"/>
    
      <category term="github" scheme="https://zhangpf2000.github.io/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://zhangpf2000.github.io/2021/03/12/hello-world.html/"/>
    <id>https://zhangpf2000.github.io/2021/03/12/hello-world.html/</id>
    <published>2021-03-11T16:00:00.000Z</published>
    <updated>2021-04-01T08:59:19.907Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
